{"version":3,"file":"index.es.js","sources":["../src/utils/fileSizeFormatter.ts","../src/localization/Italian/localization.italian.ts","../src/localization/French/localization.french.ts","../src/localization/English/localization.english.ts","../src/localization/Spanish/localization.spanish.ts","../src/localization/Russian/localization.russian.ts","../src/localization/Portuguese/localization.portuguese.ts","../src/localization/Chinese-simplified/localization.simplifiedChinese.ts","../src/localization/Chinese-traditional/localization.traditionalChinese.ts","../src/localization/FileItem.localization.ts","../src/localization/dropzone.localization.ts","../src/localization/validationError.localization.ts","../src/reader/readers.ts","../src/reader/resizeImage.ts","../src/reader/imageOrientation.ts","../src/mime/icons.ts","../src/utils/getExt.ts","../src/mime/mime.ts","../src/types/ExtFile.ts","../src/types/ExtFileManager.ts","../src/types/UploadConfig.ts","../src/synthetic-file/SyntheticFile.ts","../src/utils/IdGenerator.ts","../src/utils/fileListParser.ts","../src/utils/dropzone.utils.ts","../src/utils/shrinkWord.ts","../src/utils/fakeupload.utils.ts","../src/utils/randomInt.ts","../src/utils/input.utils.ts","../src/utils/addClassName.ts","../src/utils/isUploadAbleExtFile.ts","../src/utils/getLocalFileItemData.ts","../src/validation/separateAccept.ts","../src/validation/validateAccept.ts","../src/validation/fileValidator.ts","../src/validation/randomStatus.ts","../src/validation/fakeerros.ts","../src/synthetic-file/syntheticfileGenerator.ts","../src/mocks/extFileMock.ts","../src/upload/addExtraData.upload.ts","../src/upload/addheaders.upload.ts","../src/utils/constants.ts","../src/upload/errors.upload.ts","../src/upload/response.upload.ts","../src/upload/upload.ts","../src/upload/utils.upload.ts","../src/color/namedColors.ts","../src/color/colors.ts","../src/file-manager/reconcilation.ts"],"sourcesContent":["/**\r\n * Gives a XX.XX format in Bytes KB, MB, GB or TB\r\n * @param fileSize file size to give format in Bytes\r\n */\r\n export const fileSizeFormater = (fileSize?: number | false): string| undefined => {\r\n    let result = \"\";\r\n    if (!fileSize) {\r\n        return undefined;\r\n    }\r\n    if (fileSize < 1024) {\r\n        result = fileSize + \" Bytes\"\r\n    } else {\r\n        //KB\r\n        if (fileSize < 1024 * 1024) {\r\n            result = (fileSize / 1024).toFixed(2) + \" KB\";\r\n        } else if (fileSize < 1024 * 1024 * 1024) {\r\n            result = ((fileSize / 1024) / 1024).toFixed(2) + \" MB\";\r\n        } else if (fileSize < 1024 * 1024 * 1024 * 1024) {\r\n            result = (((fileSize / 1024) / 1024) / 1024).toFixed(2) + \" GB\";\r\n        } else {\r\n            result = ((((fileSize / 1024) / 1024) / 1024) / 1024).toFixed(2) + \" TB\";\r\n        }\r\n    }\r\n    return result;\r\n}","import { fileSizeFormater } from \"../../utils/fileSizeFormatter\";\r\nimport { LocalLabels } from \"../../types\";\r\n\r\n/**\r\n * Italian translation for Dropzone component\r\n */\r\nexport const DropzoneItalian: LocalLabels = {\r\n    defaultLabel: \"Trascina qui i tuoi file\",\r\n\r\n    uploadingMessage: (amountOfFiles) => { return `Caricamento di ${amountOfFiles} file`; },\r\n    uploadFinished: (uploaded, rejected) => `File caricati: ${uploaded}, File rifiutati: ${rejected}`,\r\n    noFilesMessage: `Nessun file valido in attesa di essere caricato`,\r\n    footer: {\r\n        acceptAll: `Tutti i tipi di file sono accettati`,\r\n        acceptCustom: (accept) => `Tipi di file consentiti: ${accept}`\r\n    },\r\n    header: {\r\n        uploadFilesMessage: \"Caricamento\",\r\n        maxSizeMessage: (maxFileSize) => `Dimensione massima ${maxFileSize}`,\r\n        validFilesMessage: (numberOfValidFiles, maxFiles) => `File  ${numberOfValidFiles}/${maxFiles}`\r\n    },\r\n    fakeuploadsuccess: \"Il file è stato caricato con successo \",\r\n    fakeUploadError: \"Errore di caricamento del file\",\r\n}\r\n\r\n/**\r\n * Italian translation for FileItem component\r\n */\r\nexport const FileItemItalian: LocalLabels = {\r\n    fullInfoLayer: {\r\n        name: `Nome: `,\r\n        size: \"Dimensione: \",\r\n        type: \"Tipo: \"\r\n    },\r\n    status: {\r\n        preparing:\"preparazione\",\r\n        uploading: \"In corso\",\r\n        success: \"Successo\",\r\n        valid: \"Valido\",\r\n        denied: \"Non válido\",\r\n        error: \"Errore\",\r\n        aborted:\"Interrotto\"\r\n    },\r\n}\r\n/**\r\n * Italian translation for Validation Errors\r\n */\r\n export const ValidateErrorItalian: LocalLabels = {\r\n    maxSizeError: (maxSize) => `Il file è molto grande. Il tam. il massimo è ${fileSizeFormater(maxSize as number)}`,\r\n    acceptError: `Tipo di file illegale`,\r\n    maxFileCount: (maxFiles) => `Numero massimo di file (${maxFiles}) raggiunto`\r\n}","import { fileSizeFormater } from \"../../utils/fileSizeFormatter\";\r\nimport { LocalLabels } from \"../../types\";\r\n\r\n/**\r\n * French translation for Dropzone component\r\n */\r\nexport const DropzoneFrench: LocalLabels = {\r\n    defaultLabel: \"Déposez vos fichiers ici\",\r\n\r\n    uploadingMessage: (amountOfFiles) => { return `Envoi de ${amountOfFiles} fichiers`; },\r\n    uploadFinished: (uploaded, rejected) => `Fichiers téléchargés : ${uploaded}, Fichiers rejetés: ${rejected}`,\r\n    noFilesMessage: `Aucun fichier valide ne manque`,\r\n    footer: {\r\n        acceptAll: `Tous types de fichiers acceptés `,\r\n        acceptCustom: (accept) => `Types de fichier: ${accept}`\r\n    },\r\n    header: {\r\n        uploadFilesMessage: \"Envoyer\",\r\n        maxSizeMessage: (maxFileSize) => `Taille maximale ${maxFileSize}`,\r\n        validFilesMessage: (numberOfValidFiles, maxFiles) => `Fichiers  ${numberOfValidFiles}/${maxFiles}`\r\n    },\r\n    fakeuploadsuccess: \"Le fichier a été téléchargé avec succès\",\r\n    fakeUploadError: \"Erreur lors du téléchargement \",\r\n}\r\n\r\n/**\r\n * French translation for FileItem component\r\n */\r\nexport const FileItemFrench: LocalLabels = {\r\n    fullInfoLayer: {\r\n        name: `Le nom: `,\r\n        size: \"Le taille: \",\r\n        type: \"Le type: \"\r\n    },\r\n    status: {\r\n        preparing:\"préparer\",\r\n        uploading: \"En cours\",\r\n        success: \"Succès\",\r\n        valid: \"Valide\",\r\n        denied: \"Refusé\",\r\n        error: \"Erreur\",\r\n        aborted:\"Interrompu\"\r\n    },\r\n}\r\n/**\r\n * French translation for Validation Errors\r\n */\r\n export const ValidateErrorFrench: LocalLabels = {\r\n    maxSizeError: (maxSize) => `Le fichier est très volumineux. Le tam. le maximum est de ${fileSizeFormater(maxSize as number)}`,\r\n    acceptError: `Type de fichier illégal `,\r\n    maxFileCount: (maxFiles) => `Limite de fichiers atteinte (${maxFiles})`\r\n}","import { fileSizeFormater } from \"../../utils/fileSizeFormatter\";\r\nimport { LocalLabels } from \"../../types\";\r\n\r\n/**\r\n * English translation for Dropzone component\r\n */\r\nexport const DropzoneEnglish: LocalLabels = {\r\n    defaultLabel: \"Drop your files here\",\r\n    uploadingMessage: (amountOfFiles) => { return `Uploading ${amountOfFiles} files`; },\r\n    uploadFinished: (uploaded, rejected) => `Uploaded files: ${uploaded}, Rejected files: ${rejected}`,\r\n    noFilesMessage: `There is no missing valid file to upload`,\r\n    footer: {\r\n        acceptAll: `All file types accepted`,\r\n        acceptCustom: (accept) => `Allowed types: ${accept}`\r\n    },\r\n    header: {\r\n        uploadFilesMessage: \"Upload files\",\r\n        maxSizeMessage: (maxFileSize) => `Max file size: ${maxFileSize}`,\r\n        validFilesMessage: (numberOfValidFiles, maxFiles) => `Files ${numberOfValidFiles}/${maxFiles}`\r\n    },\r\n    fakeuploadsuccess: \"File was successfuly uploaded\",\r\n    fakeUploadError: \"Error on uploading. Please try again later.\",\r\n}\r\n\r\n/**\r\n * English translation for FileItem component\r\n */\r\nexport const FileItemEnglish: LocalLabels = {\r\n    fullInfoLayer: {\r\n        name: `Name: `,\r\n        size: \"Size: \",\r\n        type: \"Type: \"\r\n    },\r\n    status: {\r\n        preparing:\"Preparing\",\r\n        uploading: \"Uploading\",\r\n        success: \"Success\",\r\n        valid: \"Valid\",\r\n        denied: \"Not valid\",\r\n        error: \"Error\",\r\n        aborted:\"Aborted\"\r\n    },\r\n}\r\n\r\n/**\r\n * English translation for Validation Errors\r\n */\r\nexport const ValidateErrorEnglish: LocalLabels = {\r\n    maxSizeError: (maxSize) =>\r\n        `File is too big. Max file size allowed is ${fileSizeFormater(maxSize as number)}`,\r\n    acceptError: `File type is not allowed`,\r\n    maxFileCount: (maxFiles) =>\r\n        `Max amount of files (${maxFiles}) has been reached`\r\n}","import { fileSizeFormater } from \"../../utils/fileSizeFormatter\";\r\nimport { LocalLabels } from \"../../types\";\r\n\r\n/**\r\n * Spanish translation for Dropzone component\r\n */\r\nexport const DropzoneSpanish: LocalLabels = {\r\n    defaultLabel: \"Suelta tus archivos aquí\",\r\n\r\n    uploadingMessage: (amountOfFiles) => { return `Subiendo ${amountOfFiles} archivos`; },\r\n    uploadFinished: (uploaded, rejected) => `Archivos subidos: ${uploaded}, Archivos rechazados: ${rejected}`,\r\n    noFilesMessage: `No hay archivos válidos pendientes por subir`,\r\n    footer: {\r\n        acceptAll: `Todos los tipos de archivo aceptados`,\r\n        acceptCustom: (accept) => `Tipo(s) de archivo permitidos: ${accept}`\r\n    },\r\n    header: {\r\n        uploadFilesMessage: \"Subir\",\r\n        maxSizeMessage: (maxFileSize) => `Tam. máximo ${maxFileSize}`,\r\n        validFilesMessage: (numberOfValidFiles, maxFiles) => `Archivos ${numberOfValidFiles}/${maxFiles}`\r\n    },\r\n    fakeuploadsuccess: \"El archivo se subió correctamente\",\r\n    fakeUploadError: \"Error al subir el archivo\",\r\n}\r\n\r\n/**\r\n * Spanish translation for FileItem component\r\n */\r\nexport const FileItemSpanish: LocalLabels = {\r\n    fullInfoLayer: {\r\n        name: `Nombre: `,\r\n        size: \"Tamaño: \",\r\n        type: \"Tipo: \"\r\n    },\r\n    status: {\r\n        preparing:\"Preparando\",\r\n        uploading: \"Subiendo\",\r\n        success: \"Éxito\",\r\n        valid: \"Válido\",\r\n        denied: \"No válido\",\r\n        error: \"Error\",\r\n        aborted: \"Anulado\"\r\n    },\r\n}\r\n/**\r\n * Spanish translation for Validation Errors\r\n */\r\nexport const ValidateErrorSpanish: LocalLabels = {\r\n    maxSizeError: (maxSize) => `El archivo es muy grande. El tam. máximo es ${fileSizeFormater(maxSize as number)}`,\r\n    acceptError: `Tipo de archivo no permitido`,\r\n    maxFileCount: (maxFiles) => `Cantidad máxima de archivos (${maxFiles}) alcanzada`\r\n}\r\n","import { fileSizeFormater } from \"../../utils/fileSizeFormatter\";\r\nimport { LocalLabels } from \"../../types\";\r\n\r\n/**\r\n * Russian translation for Dropzone component\r\n */\r\nexport const DropzoneRussian: LocalLabels = {\r\n    defaultLabel: \"Перетащите сюда свои файлы.\",\r\n    uploadingMessage: (amountOfFiles) => { return `Выгрузка ${amountOfFiles} файлов`; },\r\n    uploadFinished: (uploaded, rejected) => `Загружено файлов: ${uploaded}, отклоненных файлов: ${rejected}`,\r\n    noFilesMessage: `Действительный файл не отсутствует для загрузки`,\r\n    footer: {\r\n        acceptAll: `Принимаются все типы файлов `,\r\n        acceptCustom: (accept) => `Допустимые типы: ${accept}`\r\n    },\r\n    header: {\r\n        uploadFilesMessage: \"Отправить\",\r\n        maxSizeMessage: (maxFileSize) => `макс размер: ${maxFileSize}`,\r\n        validFilesMessage: (numberOfValidFiles, maxFiles) => `Файлы ${numberOfValidFiles}/${maxFiles}`\r\n    },\r\n    fakeuploadsuccess: \"Файл был успешно загружен\",\r\n    fakeUploadError: \"Ошибка при загрузке\",\r\n}\r\n\r\n/**\r\n * Russian translation for FileItem component\r\n *\r\n */\r\nexport const FileItemRussian: LocalLabels = {\r\n    fullInfoLayer: {\r\n        name: `Имя: `,\r\n        size: \"Размер: \",\r\n        type: \"Tип: \"\r\n    },\r\n    status: {\r\n        preparing:\"подготовка\",\r\n        uploading: \"Загрузка\",\r\n        success: \"успех\",\r\n        valid: \"годный\",\r\n        denied: \"выкинутый\",\r\n        error: \"ошибка\",\r\n        aborted:\"прерванный\"\r\n    },\r\n}\r\n\r\n/**\r\n * Russian translation for Validation Errors\r\n */\r\nexport const ValidateErrorRussian: LocalLabels = {\r\n    maxSizeError: (maxSize) =>\r\n        `Файл слишком большой. Максимально допустимый размер файла - ${fileSizeFormater(maxSize as number)}`,\r\n    acceptError: `Тип файла не разрешен`,\r\n    maxFileCount: (maxFiles) =>\r\n        `Достигнуто максимальное количество файлов (${maxFiles})`\r\n}","import { fileSizeFormater } from \"../../utils/fileSizeFormatter\";\r\nimport { LocalLabels } from \"../../types\";\r\n\r\n/**\r\n * Portuguese translation for Dropzone\r\n */\r\nexport const DropzonePortuguese: LocalLabels = {\r\n    defaultLabel: \"Solte seus arquivos aqui \",\r\n\r\n    uploadingMessage: (amountOfFiles) => { return `Enviando ${amountOfFiles} arquivos`; },\r\n    uploadFinished: (uploaded, rejected) => `Arquivos enviados: ${uploaded}, Arquivos rejeitados: ${rejected}`,\r\n    noFilesMessage: `Nenhum arquivo válido está faltando para enviar`,\r\n    footer: {\r\n        acceptAll: `Todos os tipos de arquivo são aceitos`,\r\n        acceptCustom: (accept) => `Tipos permitidos: ${accept}`\r\n    },\r\n    header: {\r\n        uploadFilesMessage: \"Enviar\",\r\n        maxSizeMessage: (maxFileSize) => `Tamanho máximo: ${maxFileSize}`,\r\n        validFilesMessage: (numberOfValidFiles, maxFiles) => `Arquivos ${numberOfValidFiles}/${maxFiles}`\r\n    },\r\n    fakeuploadsuccess: \"O arquivo foi enviado com sucesso\",\r\n    fakeUploadError: \"Erro ao enviar\",\r\n}\r\n\r\n\r\n/**\r\n * Portuguese translation for FileItem component\r\n */\r\nexport const FileItemPortuguese: LocalLabels = {\r\n    fullInfoLayer: {\r\n        name: `Nome: `,\r\n        size: \"Tamanho: \",\r\n        type: \"Tipo: \"\r\n    },\r\n    status: {\r\n        preparing:\"Preparando\",\r\n        uploading: \"Enviando\",\r\n        success: \"Êxito\",\r\n        valid: \"válido\",\r\n        denied: \"Negado\",\r\n        error: \"Erro\",\r\n        aborted:\"Abortado\"\r\n    },\r\n}\r\n/**\r\n * Portuguese translation for Validation Errors\r\n */\r\n export const ValidateErrorPortuguese: LocalLabels = {\r\n    maxSizeError: (maxSize) => `O arquivo é muito grande. O tamanho máximo de arquivo permitido é ${fileSizeFormater(maxSize as number)}`,\r\n    acceptError: `O tipo de arquivo não é permitido `,\r\n    maxFileCount: (maxFiles) => `Quantidade máxima de arquivos (${maxFiles}) alcançada`\r\n}","import { LocalLabels } from \"../../types\";\r\nimport { fileSizeFormater } from \"../../utils/fileSizeFormatter\";\r\n\r\n/**\r\n * English translation for Dropzone component\r\n */\r\nexport const DropzoneSimplifiedChinese: LocalLabels = {\r\n    defaultLabel: \"将您的文件放在这里\",\r\n    uploadingMessage: (amountOfFiles) => { return `上传 ${amountOfFiles} 个文件`; },\r\n    uploadFinished: (uploaded, rejected) => `上传文件：${uploaded}，拒绝文件：${rejected}`,\r\n    noFilesMessage: `没有缺少要加载的有效文件`,\r\n    footer: {\r\n        acceptAll: `接受所有文件类型`,\r\n        acceptCustom: (accept) => `允许的类型: ${accept}`\r\n    },\r\n    header: {\r\n        uploadFilesMessage: \"上传文件\",\r\n        maxSizeMessage: (maxFileSize) => `最大文件大小：${maxFileSize}`,\r\n        validFilesMessage: (numberOfValidFiles, maxFiles) => `文档 ${numberOfValidFiles}/${maxFiles}`\r\n    },\r\n    fakeuploadsuccess: \"文件已成功上传\",\r\n    fakeUploadError: \"上传时出错\",\r\n}\r\n\r\n/**\r\n * Chinnese translation for FileItem component\r\n */\r\nexport const FileItemSimplifiedChinese: LocalLabels = {\r\n    fullInfoLayer: {\r\n        name: `文档名称: `,\r\n        size: \"尺寸: \",\r\n        type: \"文件类型: \"\r\n    },\r\n    status: {\r\n        preparing:\"预加载\",\r\n        uploading: \"上传\",\r\n        success: \"成功\",\r\n        valid: \"接受的文件\",\r\n        denied: \"被拒绝的文件\",\r\n        error: \"错误\",\r\n        aborted:\"中止\"\r\n    },\r\n}\r\n\r\n/**\r\n * English translation for Validation Errors\r\n */\r\nexport const ValidateErrorSimplifiedChinese: LocalLabels = {\r\n    maxSizeError: (maxSize) =>\r\n        `文件太大。 允许的最大文件大小为 ${fileSizeFormater(maxSize as number)}`,\r\n    acceptError: `文件类型不允许`,\r\n    maxFileCount: (maxFiles) =>\r\n        `已达到最大文件数 (${maxFiles})`\r\n}","import { fileSizeFormater } from \"../../utils/fileSizeFormatter\";\r\nimport { LocalLabels } from \"../../types\";\r\n\r\n\r\n/**\r\n * English translation for Dropzone component\r\n */\r\nexport const DropzoneTraditionalChinese: LocalLabels = {\r\n    defaultLabel: \"把你的文件放在這裡 \",\r\n    uploadingMessage: (amountOfFiles) => { return `上傳${amountOfFiles}個文件`; },\r\n    uploadFinished: (uploaded, rejected) => `上傳文件: ${uploaded}, 拒絕的文件：${rejected}`,\r\n    noFilesMessage: `沒有缺少要上傳的有效文件`,\r\n    footer: {\r\n        acceptAll: `接受所有文件類型`,\r\n        acceptCustom: (accept) => `允許的類型：${accept}`\r\n    },\r\n    header: {\r\n        uploadFilesMessage: \"上傳文件\",\r\n        maxSizeMessage: (maxFileSize) => `最大文件大小：${maxFileSize}`,\r\n        validFilesMessage: (numberOfValidFiles, maxFiles) => ` 文件 ${numberOfValidFiles}/${maxFiles}`\r\n    },\r\n    fakeuploadsuccess: \"文件已成功上傳\",\r\n    fakeUploadError: \"上傳時出錯\",\r\n}\r\n\r\n/**\r\n * Chinese translation for FileItem component\r\n */\r\nexport const FileItemTraditionalChinese: LocalLabels = {\r\n    fullInfoLayer: {\r\n        name: `文檔名稱: `,\r\n        size: \"文件大小: \",\r\n        type: \"文件類型: \"\r\n    },\r\n    status: {\r\n        preparing: \"預加載\",\r\n        uploading: \"上傳\",\r\n        success: \"成功\",\r\n        valid: \"有效文件\",\r\n        denied: \"無效文件\",\r\n        error: \"錯誤\",\r\n        aborted: \"中止\"\r\n    },\r\n}\r\n\r\n/**\r\n * English translation for Validation Errors\r\n */\r\nexport const ValidateErrorTraditionalChinese: LocalLabels = {\r\n    maxSizeError: (maxSize) =>\r\n        `文件太大。 允許的最大文件大小為 ${fileSizeFormater(maxSize as number)}`,\r\n    acceptError: `文件類型不允許`,\r\n    maxFileCount: (maxFiles) =>\r\n        `已達到最大文件數 (${maxFiles})`\r\n}","import { FileItemRussian } from \"./Russian/localization.russian\";\r\nimport { ComponentLocalizer, LocalLabels, Localization } from \"../types\";\r\nimport { FileItemEnglish } from \"./English/localization.english\";\r\nimport { FileItemFrench } from \"./French/localization.french\";\r\nimport { FileItemPortuguese } from \"./Portuguese/localization.portuguese\";\r\nimport { FileItemSpanish } from \"./Spanish/localization.spanish\";\r\nimport { FileItemSimplifiedChinese } from \"./Chinese-simplified/localization.simplifiedChinese\";\r\nimport { FileItemTraditionalChinese } from \"./Chinese-traditional/localization.traditionalChinese\";\r\nimport { FileItemItalian } from \"./Italian/localization.italian\";\r\n\r\nexport const FileItemLocalizer: ComponentLocalizer = {\r\n    \"ES-es\": FileItemSpanish,\r\n    \"EN-en\": FileItemEnglish,\r\n    \"FR-fr\": FileItemFrench,\r\n    \"IT-it\": FileItemItalian,\r\n    \"PT-pt\": FileItemPortuguese,\r\n    \"RU-ru\": FileItemRussian,\r\n    \"ZH-cn\": FileItemSimplifiedChinese,\r\n    \"ZH-hk\": FileItemTraditionalChinese\r\n}\r\n\r\n/**\r\n * Secure translation through a selector\r\n * @param local the Localization\r\n * @returns a ComponentLocalizer object that contains the translation\r\n */\r\nexport const FileItemLocalizerSelector = (local?: Localization): LocalLabels => {\r\n    switch (local) {\r\n        case \"ES-es\": return FileItemLocalizer[\"ES-es\"];\r\n        case \"EN-en\": return FileItemLocalizer[\"EN-en\"];\r\n        case \"FR-fr\": return FileItemLocalizer[\"FR-fr\"];\r\n        case \"IT-it\": return FileItemLocalizer[\"IT-it\"];\r\n        case \"PT-pt\": return FileItemLocalizer[\"PT-pt\"];\r\n        case \"RU-ru\": return FileItemLocalizer[\"RU-ru\"];\r\n        case \"ZH-cn\": return FileItemLocalizer[\"ZH-cn\"];\r\n        case \"ZH-hk\": return FileItemLocalizer[\"ZH-hk\"];\r\n        default: return FileItemLocalizer[\"EN-en\"];\r\n    }\r\n}","import { DropzoneRussian } from \"./Russian/localization.russian\";\r\nimport { DropzoneEnglish } from \"./English/localization.english\";\r\nimport { DropzoneFrench } from \"./French/localization.french\";\r\nimport { DropzonePortuguese } from \"./Portuguese/localization.portuguese\";\r\nimport { DropzoneSpanish } from \"./Spanish/localization.spanish\";\r\nimport { DropzoneSimplifiedChinese } from \"./Chinese-simplified/localization.simplifiedChinese\";\r\nimport { DropzoneTraditionalChinese } from \"./Chinese-traditional/localization.traditionalChinese\";\r\nimport { DropzoneItalian } from \"./Italian/localization.italian\";\r\nimport { ComponentLocalizer, Localization, LocalLabels } from \"../types\";\r\n\r\nexport const DropzoneLocalizer: ComponentLocalizer = {\r\n    \"ES-es\": DropzoneSpanish,\r\n    \"EN-en\": DropzoneEnglish,\r\n    \"FR-fr\": DropzoneFrench,\r\n    \"IT-it\": DropzoneItalian,\r\n    \"PT-pt\": DropzonePortuguese,\r\n    \"RU-ru\": DropzoneRussian,\r\n    \"ZH-cn\": DropzoneSimplifiedChinese,\r\n    \"ZH-hk\": DropzoneTraditionalChinese\r\n\r\n}\r\n/**\r\n * Secure translation through a selector\r\n * @param local the Localization\r\n * @returns a ComponentLocalizer object that contains the translation\r\n */\r\nexport const DropzoneLocalizerSelector = (local: Localization | undefined): LocalLabels => {\r\n    switch (local) {\r\n        case \"ES-es\": return DropzoneLocalizer[\"ES-es\"];\r\n        case \"EN-en\": return DropzoneLocalizer[\"EN-en\"];\r\n        case \"FR-fr\": return DropzoneLocalizer[\"FR-fr\"];\r\n        case \"IT-it\": return DropzoneLocalizer[\"IT-it\"];\r\n        case \"PT-pt\": return DropzoneLocalizer[\"PT-pt\"];\r\n        case \"RU-ru\": return DropzoneLocalizer[\"RU-ru\"];\r\n        case \"ZH-cn\": return DropzoneLocalizer[\"ZH-cn\"];\r\n        case \"ZH-hk\": return DropzoneLocalizer[\"ZH-hk\"];\r\n        default: return DropzoneLocalizer[\"EN-en\"];\r\n    }\r\n}","import { ValidateErrorRussian } from \"./Russian/localization.russian\";\r\nimport { ComponentLocalizer, LocalLabels, Localization } from \"./../types\";\r\nimport { ValidateErrorEnglish } from \"./English/localization.english\";\r\nimport { ValidateErrorFrench } from \"./French/localization.french\";\r\nimport { ValidateErrorPortuguese } from \"./Portuguese/localization.portuguese\";\r\nimport { ValidateErrorSpanish } from \"./Spanish/localization.spanish\";\r\nimport { ValidateErrorSimplifiedChinese } from \"./Chinese-simplified/localization.simplifiedChinese\";\r\nimport { ValidateErrorTraditionalChinese } from \"./Chinese-traditional/localization.traditionalChinese\";\r\nimport { ValidateErrorItalian } from \"./Italian/localization.italian\";\r\n\r\nexport const ValidateErrorLocalizer: ComponentLocalizer = {\r\n    \"ES-es\": ValidateErrorSpanish,\r\n    \"EN-en\": ValidateErrorEnglish,\r\n    \"FR-fr\": ValidateErrorFrench,\r\n    \"IT-it\": ValidateErrorItalian,\r\n    \"PT-pt\": ValidateErrorPortuguese,\r\n    \"RU-ru\": ValidateErrorRussian,\r\n    \"ZH-cn\": ValidateErrorSimplifiedChinese,\r\n    \"ZH-hk\": ValidateErrorTraditionalChinese,\r\n}\r\n/**\r\n * Secure translation through a selector\r\n * @param local the Localization\r\n * @returns a ComponentLocalizer object that contains the translation\r\n */\r\nexport const ValidateErrorLocalizerSelector = (local: Localization | undefined): LocalLabels => {\r\n    if (!local || ![\"ES-es\", \"EN-en\", \"FR-fr\", \"IT-it\", \"PT-pt\", \"RU-ru\", \"ZH-cn\", \"ZH-hk\"].includes(local)) {\r\n        return ValidateErrorLocalizer[\"EN-en\"];\r\n    }\r\n    return ValidateErrorLocalizer[local];\r\n}","/**\r\n * Reads an image (or other type) file as data URL in a promise way, \r\n * so you can use await.\r\n * It will return a string that contains the URL representation\r\n * @param file File or Blob object\r\n * @returns data URL of the file\r\n */\r\nexport const readAsDataURL = (file: File | Blob, onProgress?: Function, onError?: Function): Promise<string | undefined> => {\r\n    return new Promise<string | undefined>((resolve, reject) => {\r\n        try {\r\n            const reader = new FileReader();\r\n            reader.onprogress = () => {\r\n                onProgress?.();\r\n            }\r\n            reader.onerror = function () {\r\n                onError?.();\r\n            }\r\n            reader.onload = function () {\r\n                resolve(reader.result as string);\r\n            }\r\n            reader.readAsDataURL(file);\r\n        } catch (error) {\r\n            reject(undefined);\r\n        }\r\n    });\r\n}\r\n\r\n\r\n\r\n/**\r\n * Reads a file as Text in a promise way, so you can use await.\r\n * If other kind of file is sent, this function will read it anyway\r\n * and will return a string that contains the URL representation\r\n * @param file File or Blob object\r\n * @param encoding The type of encoding such as \"base64\"\r\n * @returns data text of the file\r\n */\r\nexport const readAsText = (file: File | Blob, encoding?: string, onProgress?: Function, onError?: Function): Promise<string | undefined> => {\r\n    return new Promise<string | undefined>((resolve, reject) => {\r\n        try {\r\n            const reader = new FileReader();\r\n            reader.onload = function () {\r\n                resolve(reader.result as string);\r\n            }\r\n            reader.onprogress = () => {\r\n                onProgress?.();\r\n            }\r\n            reader.onerror = function () {\r\n                onError?.();\r\n            }\r\n            reader.readAsText(file, encoding ? encoding : \"base64\");\r\n        } catch (error) {\r\n            reject(undefined);\r\n        }\r\n    });\r\n}\r\n\r\n\r\n\r\n/**\r\n * Reads a file and return the raw binary data from the file. \r\n * @param file File or Blob object\r\n * @param encoding The type of encoding such as \"base64\"\r\n * @returns raw binary data of the file\r\n */\r\nexport const readAsBinaryString = (file: File | Blob, onProgress?: Function, onError?: Function): Promise<string | undefined> => {\r\n    return new Promise<string | undefined>((resolve, reject) => {\r\n        try {\r\n            const reader = new FileReader();\r\n            reader.onload = function () {\r\n                resolve(reader.result as string);\r\n            }\r\n            reader.onprogress = () => {\r\n                onProgress?.();\r\n            }\r\n            reader.onerror = function () {\r\n                onError?.();\r\n            }\r\n            reader.readAsBinaryString(file);\r\n        } catch (error) {\r\n            reject(undefined);\r\n        }\r\n    });\r\n}\r\n\r\n/**\r\n * Reads a file and returns an ArrayBuffer representing the file's data \r\n * @param file File or blob object\r\n * @param encoding The type of encoding such as \"base64\"\r\n * @returns ArrayBuffer representation of the file\r\n */\r\nexport const readAsArrayBuffer = (file: File | Blob, onProgress?: Function, onError?: Function): Promise<string | undefined> => {\r\n    return new Promise<string | undefined>((resolve, reject) => {\r\n        try {\r\n            const reader = new FileReader();\r\n            reader.onload = function () {\r\n                resolve(reader.result as string);\r\n            }\r\n            reader.onprogress = () => {\r\n                onProgress?.();\r\n            }\r\n            reader.onerror = function () {\r\n                onError?.();\r\n            }\r\n            reader.readAsArrayBuffer(file);\r\n        } catch (error) {\r\n            reject(undefined);\r\n        }\r\n    });\r\n}","/**\r\n * Resize an image resolution given maxWidth and maxHeight\r\n * \r\n * Should be called with await\r\n * @param base64Str a string representation of an imae file\r\n * @param maxWidth the max width of he image\r\n * @param maxHeight the max height of he image\r\n * @returns the resized image\r\n */\r\nexport function resizeImage(\r\n    base64Str: string,\r\n    maxWidth = 135,\r\n    maxHeight = 120\r\n): Promise<string | undefined> {\r\n    return new Promise((resolve, reject) => {\r\n        try {\r\n            let img: HTMLImageElement = new Image();\r\n            img.src = base64Str;\r\n            img.onload = () => {\r\n                let canvas: HTMLCanvasElement = document.createElement('canvas');\r\n                const MAX_WIDTH: number = maxWidth;\r\n                const MAX_HEIGHT: number = maxHeight;\r\n                let width: number = img.width;\r\n                let height: number = img.height;\r\n\r\n                if (maxWidth > width && maxHeight > height) {\r\n                    resolve(base64Str);\r\n                } else\r\n                    if (width > height) {\r\n                        if (width > MAX_WIDTH) {\r\n                            height *= MAX_WIDTH / width;\r\n                            width = MAX_WIDTH;\r\n                        }\r\n                    } else {\r\n                        if (height > MAX_HEIGHT) {\r\n                            width *= MAX_HEIGHT / height;\r\n                            height = MAX_HEIGHT;\r\n                        }\r\n                    }\r\n                canvas.width = width\r\n                canvas.height = height\r\n                let ctx: CanvasRenderingContext2D | null = canvas.getContext('2d')\r\n                if (ctx) {\r\n                    ctx.drawImage(img, 0, 0, width, height);\r\n                    resolve(canvas.toDataURL());\r\n\r\n                } else {\r\n                    if (process.env.NODE_ENV === \"development\") {\r\n                        console.error(\"An error ocurred when trying to make a thumnail\");\r\n                    }\r\n                    reject(undefined);\r\n                }\r\n            }\r\n        } catch (error) {\r\n            if (process.env.NODE_ENV === \"development\") {\r\n                console.error(\"An error ocurred when trying to make a thumnail\");\r\n            }\r\n            reject(undefined);\r\n        }\r\n    });\r\n}\r\n\r\n","/**\r\n * Resize an image resolution given maxWidth and maxHeight\r\n * \r\n * Should be called with await\r\n * @param base64Str a string representation of an imae file\r\n * @param maxWidth the max width of he image\r\n * @param maxHeight the max height of he image\r\n * @returns the resized image\r\n */\r\nexport function getImageOrientation(\r\n    imageSource: string | undefined,\r\n): Promise<\"landscape\" | \"portrait\"> {\r\n    return new Promise((resolve, reject) => {\r\n        //console.log(\"getImageOrientation imageSource\", imageSource);\r\n        if (!imageSource || imageSource.length === 0) {\r\n           // console.log(\"getImageOrientation rejected\", imageSource);\r\n\r\n            reject(\"landscape\");\r\n            return;\r\n        }\r\n        try {\r\n            //console.log(\"getImageOrientation try ini\", imageSource);\r\n\r\n            let img: HTMLImageElement = new Image();\r\n            img.src = imageSource;\r\n            img.onerror = (ev: string | Event) => {\r\n                //console.log(\"getImageOrientation There was a ne error reading\", ev);\r\n                reject(\"landscape\");\r\n            }\r\n            img.onload = () => {\r\n                let width: number = img.width;\r\n                let height: number = img.height;\r\n                if (width > height) {\r\n                    resolve(\"landscape\");\r\n                } else {\r\n                    resolve(\"portrait\");\r\n                }\r\n            }\r\n        } catch (error) {\r\n            //console.error(\"An error ocurred when trying to get the image orientation\");\r\n\r\n            if (process.env.NODE_ENV === \"development\") {\r\n                console.error(\"An error ocurred when trying to get the image orientation\");\r\n            }\r\n            reject(\"landscape\");\r\n        }\r\n    });\r\n}\r\n\r\n","export const sevenzip = \"https://user-images.githubusercontent.com/43678736/132086517-72a51a12-e403-4675-bfd7-22c23affa730.png\";\r\nexport const aac = \"https://user-images.githubusercontent.com/43678736/132086518-7026d4f1-ea16-4ed0-89fd-37c1aa8ac3ed.png\";\r\nexport const abw = \"https://user-images.githubusercontent.com/43678736/132086519-863c63b4-917e-4471-94ff-7e15651cc14b.png\";\r\nexport const accdb = \"https://user-images.githubusercontent.com/43678736/132086520-9bc6aa3b-51c9-4da2-9ef7-349162b86d0b.png\";\r\nexport const avi = \"https://user-images.githubusercontent.com/43678736/132086521-dbd6cf0d-d4d7-4b92-bb26-17e8a51a9383.png\";\r\nexport const azw = \"https://user-images.githubusercontent.com/43678736/132086522-070f48e8-78a8-4294-8dbb-aab81525e164.png\";\r\nexport const bmp = \"https://user-images.githubusercontent.com/43678736/132086595-90ab7f90-f87e-4900-94d9-d0b26745df48.png\";\r\nexport const bz = \"https://user-images.githubusercontent.com/43678736/132086597-e285ad5c-613a-4679-a270-493e5be4ffd9.png\";\r\nexport const bz2 = \"https://user-images.githubusercontent.com/43678736/132086598-623c410a-084a-4395-a448-211b2ff61cfe.png\";\r\nexport const c = \"https://user-images.githubusercontent.com/43678736/132086599-7a5cd692-b4df-45f5-80d9-384cb3e0c314.png\";\r\nexport const cda = \"https://user-images.githubusercontent.com/43678736/132086600-8b70a007-512d-4252-9c66-eabd3ddd6573.png\";\r\nexport const csh = \"https://user-images.githubusercontent.com/43678736/132086601-e62e5d1a-d8a2-4475-a14f-85922cec9272.png\";\r\nexport const css = \"https://user-images.githubusercontent.com/43678736/132086602-4c772934-f608-4f01-8459-c4622cee8ad5.png\";\r\nexport const csv = \"https://user-images.githubusercontent.com/43678736/132086604-b5b019fe-572e-477e-92c2-3769a48a1304.png\";\r\nexport const docx = \"https://user-images.githubusercontent.com/43678736/132086606-715ccb66-4702-4f7d-9b09-ac93ba17b643.png\";\r\nexport const docx2 = \"https://user-images.githubusercontent.com/43678736/132086607-a246b386-52c9-4fe1-a7e4-204894e6722d.png\";\r\nexport const drawio = \"https://user-images.githubusercontent.com/43678736/132086608-bcae9d57-8e54-488c-90c4-4952ae530b5e.png\";\r\nexport const dw = \"https://user-images.githubusercontent.com/43678736/132086616-0c7842d6-d20e-4ede-988b-3dd063a4de8d.png\";\r\nexport const eml = \"https://user-images.githubusercontent.com/43678736/132086617-1e351075-ffaf-4b81-a1fe-0b7b338772a2.png\";\r\nexport const eot = \"https://user-images.githubusercontent.com/43678736/132086618-397d6bd2-9fda-43ed-a135-cb40388c35af.png\";\r\nexport const eps = \"https://user-images.githubusercontent.com/43678736/132086619-9daf0b61-dbb0-4d47-8a12-9fba13b88856.png\";\r\nexport const epub = \"https://user-images.githubusercontent.com/43678736/132086620-2586ba40-c583-4589-b1a4-8bb5b258b44d.png\";\r\nexport const freearc = \"https://user-images.githubusercontent.com/43678736/132086621-3b95fb64-2533-4ccc-abcd-bd2beba572e9.png\";\r\nexport const gif = \"https://user-images.githubusercontent.com/43678736/132086622-af705a0c-2b25-4ba7-8ab6-bd69ec97f7e2.png\";\r\nexport const gzip = \"https://user-images.githubusercontent.com/43678736/132086624-89141a46-64e4-4fa0-bf69-54a0eb4d48c9.png\";\r\nexport const html = \"https://user-images.githubusercontent.com/43678736/132086625-1b8f2652-1de0-4475-8c12-7da4a9973ffb.png\";\r\nexport const icalendar = \"https://user-images.githubusercontent.com/43678736/132086626-38699705-1e6f-4bca-984b-03167b236faa.png\";\r\nexport const ind = \"https://user-images.githubusercontent.com/43678736/132086627-2f24067a-00bc-424a-af36-349a9ba14b6c.png\";\r\nexport const ini = \"https://user-images.githubusercontent.com/43678736/132086649-20c9c9e6-8e63-4d87-9b8e-8fe8eba12ada.png\";\r\nexport const java = \"https://user-images.githubusercontent.com/43678736/132086650-f1166246-b361-4c30-a04e-9781c555d14a.png\";\r\nexport const jar = \"https://user-images.githubusercontent.com/43678736/132086650-f1166246-b361-4c30-a04e-9781c555d14a.png\";\r\nexport const javascript = \"https://user-images.githubusercontent.com/43678736/132086652-4562942e-aaea-466c-968f-380fffabf3f9.png\";\r\nexport const jpeg = \"https://user-images.githubusercontent.com/43678736/132086653-0487e7e2-1ee3-49e2-8cfe-3e20f1f7490a.png\";\r\nexport const jsf = \"https://user-images.githubusercontent.com/43678736/132086654-c510bd8f-8de7-4afe-8c20-cc810b004b07.png\";\r\nexport const json = \"https://user-images.githubusercontent.com/43678736/132086656-6e96c815-e4e2-4ffd-9d71-57e9cc2450bc.png\";\r\nexport const jsonld = \"https://user-images.githubusercontent.com/43678736/132086658-5d27d3c2-394f-43fb-b512-9b414a257875.png\";\r\nexport const midi = \"https://user-images.githubusercontent.com/43678736/132086659-98f3ef6e-b9f3-4b6d-b18f-469b5334ba27.png\";\r\nexport const mov = \"https://user-images.githubusercontent.com/43678736/132086660-adcecedd-56b4-4286-8b0f-69417f77e961.png\";\r\nexport const mp3 = \"https://user-images.githubusercontent.com/43678736/132086661-a5484553-06c7-4ffa-a8f9-96b57b1b0344.png\";\r\nexport const mp4 = \"https://user-images.githubusercontent.com/43678736/132086662-05ad1597-d5e5-4efa-833e-2876e966a745.png\";\r\nexport const mpeg = \"https://user-images.githubusercontent.com/43678736/132086663-90c58955-f7fb-4bdb-ac53-92667d16d4a3.png\";\r\nexport const mpkg = \"https://user-images.githubusercontent.com/43678736/132086664-9a7530e7-6d78-4ef3-a176-20cf7f57b555.png\";\r\nexport const octet = \"https://user-images.githubusercontent.com/43678736/132086666-ab3c505d-b2c0-4177-9a06-aed5d9c39ee4.png\";\r\nexport const odp = \"https://user-images.githubusercontent.com/43678736/132086667-6c7dcbcc-8d83-41a2-8e0a-85b09e2791ae.png\";\r\nexport const ods = \"https://user-images.githubusercontent.com/43678736/132086668-9f246e91-cf2e-49cf-9617-e1fbb71abbbb.png\";\r\nexport const odt = \"https://user-images.githubusercontent.com/43678736/132086669-46113762-84d1-4b32-9441-b0138ce17a5d.png\";\r\nexport const oga = \"https://user-images.githubusercontent.com/43678736/145835364-2054509d-3448-4d34-921f-73dd6e297fc7.png\";\r\nexport const ogv = \"https://user-images.githubusercontent.com/43678736/145835367-19172bf8-cd5a-4cbe-b512-d0de1d91f269.png\";\r\nexport const ogx = \"https://user-images.githubusercontent.com/43678736/145835373-a57ef0f5-3968-483b-9f55-6d67e7f1dcea.png\";\r\nexport const opus = \"https://user-images.githubusercontent.com/43678736/132086670-0f96e770-cedc-4635-a5f9-cf97894c1d7a.png\";\r\nexport const otf = \"https://user-images.githubusercontent.com/43678736/132086671-02ad35ef-ec3a-4a65-abd5-5bf794dfcf7b.png\";\r\nexport const pdf = \"https://user-images.githubusercontent.com/43678736/132086672-3a856fda-823d-4997-b802-c7c640e6ef44.png\";\r\nexport const php = \"https://user-images.githubusercontent.com/43678736/132086673-0c4409ab-754e-4619-8cfa-179d0ccf1bd9.png\";\r\nexport const png = \"https://user-images.githubusercontent.com/43678736/132086674-fdb56d02-5845-49b7-8462-6357bc963464.png\";\r\nexport const pptx = \"https://user-images.githubusercontent.com/43678736/132086675-c879645d-acb4-41a6-ab3c-4e6c2048badb.png\";\r\nexport const pptx2 = \"https://user-images.githubusercontent.com/43678736/132086676-6de1bbd7-764f-4197-9aa4-405a60ce6734.png\";\r\nexport const proj = \"https://user-images.githubusercontent.com/43678736/132086683-3dc0a8b8-72f8-4fa1-a08a-fcfd75b465e1.png\";\r\nexport const psd = \"https://user-images.githubusercontent.com/43678736/132086685-4e327c4c-a409-4b83-b36a-8d88936b314b.png\";\r\nexport const pst = \"https://user-images.githubusercontent.com/43678736/132086686-3888e43a-5abf-41f7-9940-4b86e436521f.png\";\r\nexport const publisher = \"https://user-images.githubusercontent.com/43678736/132086687-d92b56ff-f7f7-4be7-bbf4-47b8a33f4c6f.png\";\r\nexport const python = \"https://user-images.githubusercontent.com/43678736/132086688-8e82fae4-3a9b-49c0-bf99-77189525514c.png\";\r\nexport const tar = \"https://user-images.githubusercontent.com/43678736/132086689-fe1fef9f-d2db-455b-8f4b-09acd095f571.png\";\r\nexport const rar = \"https://user-images.githubusercontent.com/43678736/132086689-fe1fef9f-d2db-455b-8f4b-09acd095f571.png\";\r\nexport const react = \"https://user-images.githubusercontent.com/43678736/132086691-d472576b-ec6a-4332-acd2-dd6a00b72952.png\";\r\nexport const richtextformat = \"https://user-images.githubusercontent.com/43678736/132086692-df6e3518-2e6a-4553-883d-e21694980449.png\";\r\nexport const rtf = \"https://user-images.githubusercontent.com/43678736/132086693-9d43571e-0c86-438f-b247-e2cb42e19e06.png\";\r\nexport const sass = \"https://user-images.githubusercontent.com/43678736/132086694-4e661d6a-1118-441e-8bc3-c52fcb2133b6.png\";\r\nexport const settings = \"https://user-images.githubusercontent.com/43678736/132086696-0dd21f83-b9fc-490c-9ed5-bd88151dc9bb.png\";\r\nexport const sh = \"https://user-images.githubusercontent.com/43678736/132086697-1d82d724-35b6-4f06-847a-3c59a5deda6e.png\";\r\nexport const swf = \"https://user-images.githubusercontent.com/43678736/132086698-19384230-dbd7-4e05-bc69-ef4537b6aae3.png\";\r\nexport const text = \"https://user-images.githubusercontent.com/43678736/132086699-5993a482-04f4-4915-b105-9037f527cf61.png\";\r\nexport const tiff = \"https://user-images.githubusercontent.com/43678736/132086700-c23461c8-6819-46e1-aecd-0a1f8d3507bb.png\";\r\nexport const ttf = \"https://user-images.githubusercontent.com/43678736/132086701-c8044c09-8d95-4af1-9410-66761001d7da.png\";\r\nexport const typescript = \"https://user-images.githubusercontent.com/43678736/132086702-59294337-ed99-4302-badd-316b2c1ff62f.png\";\r\nexport const url = \"https://user-images.githubusercontent.com/43678736/132086703-86d97476-b76e-4949-b89a-31ecb03f3b6e.png\";\r\nexport const vsd = \"https://user-images.githubusercontent.com/43678736/132086704-8fd51e7c-afa2-47a3-ab2f-d0bcd0ecae9f.png\";\r\nexport const vue = \"https://user-images.githubusercontent.com/43678736/132086705-33294da1-5c0f-49f7-b890-e4857cec0a6d.png\";\r\nexport const wav = \"https://user-images.githubusercontent.com/43678736/132086706-22f805d0-39d4-494b-824e-47dc75d05eb7.png\";\r\nexport const webm = \"https://user-images.githubusercontent.com/43678736/132086707-e61a84de-d396-4dbf-8d1b-1d6ee19e1ac8.png\";\r\nexport const weba = \"https://user-images.githubusercontent.com/43678736/132086707-e61a84de-d396-4dbf-8d1b-1d6ee19e1ac8.png\";\r\nexport const webp = \"https://user-images.githubusercontent.com/43678736/132086708-21d096dd-7148-40aa-97f1-cbb099339740.png\";\r\nexport const wma = \"https://user-images.githubusercontent.com/43678736/132086709-811d4e90-3cfa-4044-a956-aeda9c67fc92.png\";\r\nexport const wmv = \"https://user-images.githubusercontent.com/43678736/132086710-c5479c6c-0249-4542-adad-48b0ef40b775.png\";\r\nexport const woff = \"https://user-images.githubusercontent.com/43678736/132086711-1524a3e7-3e33-4822-a34f-ff3235404045.png\";\r\nexport const xlsx = \"https://user-images.githubusercontent.com/43678736/132086712-17e2c491-f6e4-4586-aef6-06bcc5f4b0e5.png\";\r\nexport const xlsx2 = \"https://user-images.githubusercontent.com/43678736/132086714-7ddf285d-2b83-4115-80a5-f02f510300a1.png\";\r\nexport const xml = \"https://user-images.githubusercontent.com/43678736/132086715-204b5a8b-9c5a-4bac-8294-9237ebc16089.png\";\r\nexport const xul = \"https://user-images.githubusercontent.com/43678736/132086716-64511d20-58cb-45a8-85df-f4d9408b469d.png\";\r\nexport const zip = \"https://user-images.githubusercontent.com/43678736/132086718-a8499333-6282-4820-aa1f-4d133eb54648.png\";\r\n","/**\r\n * Looks for the first file extension\r\n * @param fileName file name\r\n * @returns the file name extension\r\n */\r\n export const getExt = (fileName: string): string => {\r\n    const re = /(?:\\.([^.]+))?$/;\r\n    const result = re.exec(fileName);\r\n    if (result) {\r\n        return result[1];\r\n    } else {\r\n        return \"\";\r\n    }\r\n\r\n};","import {\r\n    aac, abw, accdb, avi, azw,\r\n    bmp, bz, bz2, cda,\r\n    csh, css, csv,\r\n    docx, drawio,\r\n    eot, epub,\r\n    freearc, gif, gzip,\r\n    html, icalendar,\r\n    jar, java, javascript, jpeg, json, jsonld,\r\n    midi, mp3, mp4, mpeg, mpkg,\r\n    octet, odp, ods, odt, oga, ogv, ogx, opus, otf,\r\n    pdf, php, png, pptx, psd, python,\r\n    rar, react, rtf,\r\n    sass, sevenzip, sh, swf,\r\n    tar, text, tiff, ttf, typescript,\r\n    vsd, vue,\r\n    wav, weba, webm, webp, wma, wmv, woff,\r\n    xlsx, xml, xul,\r\n    zip\r\n} from \"./icons\";\r\nimport { getExt } from \"../utils/getExt\";\r\nimport { IconsMap } from \"../types\";\r\n\r\nconst DEF_GEN_MIME: keyof IconsMap = \"octet\";\r\n/**\r\n * \r\n * @param tailMime \r\n * @returns \r\n */\r\nexport const audioSelector = (tailMime: string): keyof IconsMap => {\r\n    switch (tailMime) {\r\n        case \"aac\": return \"aac\";\r\n        case \"midi\": return \"midi\";\r\n        case \"x-midi\": return \"midi\";\r\n        case \"mpeg\": return \"mpeg\";//mp3\r\n        case \"ogg\": return \"oga\";\r\n        case \"opus\": return \"opus\";\r\n        case \"wav\": return \"wav\";\r\n        case \"webm\": return \"webm\";\r\n        //case \"3gpp\": return \"threegp\";\r\n        //case \"3gpp2\": return \"threegp\";\r\n        //case \"mp3\": return \"mp3\";\r\n        case \"wma\": return \"wma\";\r\n        default: return DEF_GEN_MIME;\r\n    }\r\n}\r\nexport const textSelector = (tailMime: string): keyof IconsMap => {\r\n    switch (tailMime) {\r\n        case \"css\": return \"css\";\r\n        case \"csv\": return \"csv\";\r\n        case \"html\": return \"html\";\r\n        case \"calendar\": return \"icalendar\";\r\n        case \"javascript\": return \"javascript\";\r\n        case \"x-javascript\": return \"javascript\";\r\n        case \"plain\": return \"text\";\r\n        case \"xml\": return \"xml\";\r\n        default: return DEF_GEN_MIME;\r\n\r\n    }\r\n}\r\nexport const imageSelector = (tailMime: string): keyof IconsMap => {\r\n    switch (tailMime) {\r\n        case \"bmp\": return \"bmp\";\r\n        case \"gif\": return \"gif\";\r\n        // case \"vnd.microsoft.icon\": return \"ico\";\r\n        //case \"ico\": return \"ico\";\r\n        case \"jpg\": return \"jpeg\";\r\n        case \"jpeg\": return \"jpeg\";\r\n        case \"png\": return \"png\";\r\n        //case \"svg+xml\": return \"svg\";\r\n        //case \"svg\": return \"svg\";\r\n        case \"tiff\": return \"tiff\";\r\n        case \"webp\": return \"webp\";\r\n        default: return DEF_GEN_MIME;\r\n\r\n    }\r\n}\r\nexport const fontSelector = (tailMime: string): keyof IconsMap => {\r\n    switch (tailMime) {\r\n        case \"otf\": return \"otf\";\r\n        case \"ttf\": return \"ttf\";\r\n        case \"woff\": return \"woff\";\r\n        case \"woff2\": return \"woff\";\r\n        default: return DEF_GEN_MIME;\r\n\r\n    }\r\n}\r\n\r\nexport const videoSelector = (tailMime: string): keyof IconsMap => {\r\n    switch (tailMime) {\r\n        case \"x-msvideo\": return \"avi\";\r\n        case \"msvideo\": return \"avi\";\r\n        case \"avi\": return \"avi\";\r\n        case \"mp4\": return \"mp4\";\r\n        case \"mpeg\": return \"mpeg\";\r\n        case \"ogg\": return \"ogv\";\r\n        case \"mp2t\": return \"mp2t\";\r\n        case \"wmv\": return \"wmv\";\r\n\r\n        case \"webm\": return \"webm\";\r\n        // case \"3gpp\": return \"threegp\";\r\n        // case \"3gpp2\": return \"threegp2\";\r\n\r\n        default: return DEF_GEN_MIME;\r\n    }\r\n}\r\n/**\r\n * \r\n * @param tailMime \r\n * @returns \r\n */\r\nexport const applicationSelector = (tailMime: string): keyof IconsMap => {\r\n    switch (tailMime) {\r\n        case \"x-abiword\": return \"abw\";\r\n        case \"abiword\": return \"abw\";\r\n        case \"x-freearc\": return \"arc\";\r\n        case \"freearc\": return \"arc\";\r\n        case \"vnd.amazon.ebook\": return \"azw\";\r\n        case \"octet-stream\": return \"octet\";\r\n        case \"x-bzip\": return \"bz\";\r\n        case \"x-bzip2\": return \"bz2\";\r\n        case \"bzip\": return \"bz\";\r\n        case \"bzip2\": return \"bz2\";\r\n        case \"x-cdf\": return \"cda\";\r\n        case \"msaccess\": return \"accdb\";\r\n        case \"csh\": return \"csh\";\r\n        case \"x-csh\": return \"csh\";\r\n        case \"vnd.ms-fontobject\": return \"eot\";\r\n        case \"epub+zip\": return \"epub\";\r\n        case \"gzip\": return \"gzip\";\r\n        case \"java-archive\": return \"jar\";\r\n        case \"x-javascript\": return \"javascript\";\r\n        case \"json\": return \"json\";\r\n        case \"ld+json\": return \"jsonld\";\r\n        case \"vnd.apple.installer+xml\": return \"mpkg\";\r\n        case \"ogg\": return \"ogx\";\r\n        case \"vnd.rar\": return \"rar\";\r\n        case \"rtf\": return \"rtf\";\r\n        case \"x-sh\": return \"sh\";\r\n        case \"sh\": return \"sh\";\r\n        case \"x-shockwave-flash\": return \"swf\";\r\n        case \"x-tar\": return \"tar\";\r\n        case \"x-httpd-php\": return \"php\";\r\n        case \"vnd.visio\": return \"vsd\";\r\n        case \"xhtml+xml\": return \"xhtml\";\r\n        case \"xml\": return \"xml\";\r\n        case \"vnd.mozilla.xul+xml\": return \"xul\";\r\n        case \"vnd.openxmlformats-officedocument.wordprocessingml.document\": return \"docx\";\r\n        case \"msword\": return \"docx\";\r\n        case \"vnd.openxmlformats-officedocument.spreadsheetml.sheet\": return \"xlsx\";\r\n        case \"vnd.openxmlformats-officedocument.presentationml.presentation\": return \"pptx\";\r\n        case \"vnd.ms-powerpoint\": return \"pptx\";\r\n        case \"vnd.oasis.opendocument.presentation\": return \"odp\";\r\n        case \"vnd.oasis.opendocument.text\": return \"odt\";\r\n        case \"vnd.oasis.opendocument.spreadsheet\": return \"ods\";\r\n        case \"zip\": return \"zip\";\r\n        case \"x-zip-compressed\": return \"zip\";\r\n        case \"pdf\": return \"pdf\";\r\n        default: return DEF_GEN_MIME;\r\n    }\r\n}\r\n/**\r\n * Selects to wich mime type the mime type given belongs to\r\n * @param mimeType mime type to be searched \r\n * @returns the generic type, \r\nif not found it return \"octet\" that means generic binary file\r\n */\r\nexport const mimeSelector = (mimeType?: string): keyof IconsMap => {\r\n    // let genericMime: string | undefined = undefined;\r\n    if (!mimeType || !mimeType.includes(\"/\")) {\r\n        return DEF_GEN_MIME;\r\n    }\r\n    let headerMime = mimeType.split(\"/\")[0];\r\n    let tailMime = mimeType.split(\"/\")[1];\r\n    /**\r\n     * Every mimetype that \r\n     * starts with: \"application/....\"\r\n     */\r\n\r\n    switch (headerMime) {\r\n        case \"application\": return applicationSelector(tailMime);\r\n        case \"audio\": return audioSelector(tailMime);\r\n        case \"video\": return videoSelector(tailMime);\r\n        case \"text\": return textSelector(tailMime);\r\n        case \"image\": return imageSelector(tailMime);\r\n        case \"font\": return fontSelector(tailMime);\r\n\r\n        default: return DEF_GEN_MIME;\r\n    }\r\n}\r\n/**\r\n * Selects to wich mapped extension\r\n * the given exension belongs to\r\n * \r\n * @param extension \r\n * @returns \r\n */\r\nexport const extensionSelector = (extension?: string): keyof IconsMap => {\r\n    let genericMime: keyof IconsMap = \"octet\";\r\n\r\n    if (extension && extension !== \"\") {\r\n        if (extension.includes(\"zip\") || extension.includes(\"rar\")) {\r\n            genericMime = \"zip\";\r\n        } else if (extension.includes(\"doc\")) {\r\n            genericMime = \"docx\";\r\n        } else if (extension.includes(\"xls\")) {\r\n            genericMime = \"xlsx\";\r\n        } else if (extension.includes(\"drawio\")) {\r\n            genericMime = \"drawio\";\r\n        } else if (extension.includes(\"psd\")) {\r\n            genericMime = \"psd\";\r\n        } else if (extension.includes(\"csv\")) {\r\n            genericMime = \"csv\";\r\n        } else if (extension === \"jsx\") {\r\n            genericMime = \"react\";\r\n        } else if (extension === \"py\") {\r\n            genericMime = \"python\";\r\n        } else if (extension === \"vue\") {\r\n            genericMime = \"vue\";\r\n        } else if (extension === \"java\") {\r\n            genericMime = \"java\";\r\n        } else if (extension === \"ts\") {\r\n            genericMime = \"typescript\";\r\n        } else if (extension === \"sass\" || extension === \"scss\") {\r\n            genericMime = \"sass\";\r\n        }\r\n    }\r\n    return genericMime;\r\n\r\n}\r\n/**\r\n * Chack for extention whether the file is code os not\r\n * @param extension \r\n * @returns \r\n */\r\nexport const checkIsCode = (extension?: string): keyof IconsMap => {\r\n    let genericMime: keyof IconsMap = \"text\";\r\n    if (extension && extension !== \"\") {\r\n        if (extension === \"jsx\") {\r\n            genericMime = \"react\";\r\n        } else if (extension === \"py\") {\r\n            genericMime = \"python\";\r\n        } else if (extension === \"vue\") {\r\n            genericMime = \"vue\";\r\n        } else if (extension === \"java\") {\r\n            genericMime = \"java\";\r\n        } else if (extension === \"ts\" || extension === \"tsx\") {\r\n            genericMime = \"typescript\";\r\n        } else if (extension === \"js\") {\r\n            genericMime = \"javascript\";\r\n        } else if (extension === \"xml\") {\r\n            genericMime = \"xml\";\r\n        } else if (extension === \"php\") {\r\n            genericMime = \"php\";\r\n        }\r\n    }\r\n    return genericMime;\r\n}\r\n\r\n/**\r\n * Looks for a suitable file icon\r\n * If not found, returns octet-stream url\r\n * @param props mime and extension from file to search\r\n * @returns the result file ico\r\n */\r\nexport const getURLFileIco = (\r\n    file: File | undefined,\r\n    customIcons: IconsMap | undefined\r\n): ResultFileIco => {\r\n\r\n    let result: keyof IconsMap = \"fallBack\";\r\n    //if not file, return octet\r\n    if (!file) {\r\n        result = DEF_GEN_MIME;\r\n        if (customIcons?.fallBack)\r\n            return { url: customIcons?.fallBack, mimeResume: result };\r\n\r\n        return { url: mimeUrlList[result], mimeResume: result };\r\n    } else {\r\n        result = mimeSelector(file.type);\r\n    }\r\n    //If plain text\r\n    const extention: string = getExt(file.name);\r\n\r\n    if (result === \"text\") {\r\n        result = checkIsCode(extention);\r\n\r\n    }\r\n    //If octet stream result, second chance: file extention\r\n    if (result === DEF_GEN_MIME) {\r\n        result = extensionSelector(extention);\r\n    }\r\n\r\n    const customUrl = customIcons?.[result];\r\n    if (customUrl !== undefined)\r\n        return { url: customUrl, mimeResume: result };\r\n\r\n\r\n    return { url: mimeUrlList[result], mimeResume: result };\r\n}\r\n/**\r\n * Looks for a suitable file icon\r\n * @param props mime and extension from file to search\r\n * @returns the result file ico, if not found, turns octet-stream url\r\n */\r\nexport const getURLFileIcoFromNameAndType = (\r\n    name: string | undefined,\r\n    type: string | undefined,\r\n    customIcons: IconsMap | undefined\r\n): ResultFileIco => {\r\n\r\n    let result: keyof IconsMap = \"octet\";\r\n    //if not nam and type, return octet\r\n    if (!name) {\r\n        result = DEF_GEN_MIME;\r\n        if (customIcons?.fallBack)\r\n            return { url: customIcons?.fallBack, mimeResume: result };\r\n        return { url: mimeUrlList[result], mimeResume: result };\r\n    } else {\r\n        result = mimeSelector(type);\r\n    }\r\n    //If plain text\r\n    const extention: string = getExt(name);\r\n\r\n    if (result === \"text\") {\r\n        result = checkIsCode(extention);\r\n\r\n    }\r\n    //If octet stream result, second chance: file extention\r\n    if (result === DEF_GEN_MIME) {\r\n        result = extensionSelector(extention);\r\n    }\r\n    const customUrl = customIcons?.[result];\r\n    if (customUrl !== undefined)\r\n        return { url: customUrl, mimeResume: result };\r\n\r\n    return { url: mimeUrlList[result], mimeResume: result };\r\n}\r\ninterface ResultFileIco {\r\n    url: string;\r\n    mimeResume: keyof IconsMap;\r\n}\r\n/**\r\n * set of registered mimes on MDN\r\n * https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Common_types\r\n * \r\n */\r\ninterface MimeSelector {\r\n    [mime: string]: string;\r\n}\r\n\r\nconst mimeUrlList: MimeSelector = {\r\n    aac: aac,\r\n    accdb: accdb,\r\n    abw: abw,\r\n    arc: freearc,\r\n    avi: avi,\r\n    azw: azw,\r\n    octet: octet,\r\n    bmp: bmp,\r\n    bz: bz,\r\n    bz2: bz2,\r\n    cda: cda,\r\n    csh: csh,\r\n    css: css,\r\n    csv: csv,\r\n    docx: docx,\r\n    drawio: drawio,\r\n    eot: eot,\r\n    epub: epub,\r\n    gzip: gzip,\r\n    gif: gif,\r\n    html: html,\r\n    //ico: ico,\r\n    icalendar: icalendar,\r\n    jar: jar,\r\n    jpeg: jpeg,\r\n    javascript: javascript,\r\n    json: json,\r\n    jsonld: jsonld,\r\n    midi: midi,\r\n    //  js: js,\r\n    mp3: mp3,\r\n    mp4: mp4,\r\n    mpeg: mpeg,\r\n    mpkg: mpkg,\r\n    mp2t: octet,\r\n    odp: odp,\r\n    ods: ods,\r\n    odt: odt,\r\n    oga: oga,\r\n    ogv: ogv,\r\n    ogx: ogx,\r\n    opus: opus,\r\n    otf: otf,\r\n    png: png,\r\n    pdf: pdf,\r\n    php: php,\r\n    pptx: pptx,\r\n    psd: psd,\r\n    rar: rar,\r\n    rtf: rtf,\r\n    sass: sass,\r\n    sh: sh,\r\n    //svg: svg,\r\n    swf: swf,\r\n    tar: tar,\r\n    tiff: tiff,\r\n    ttf: ttf,\r\n    //ts: ts,\r\n    typescript: typescript,\r\n    text: text,\r\n    vsd: vsd,\r\n    wav: wav,\r\n    weba: weba,\r\n    webm: webm,\r\n    webp: webp,\r\n    woff: woff,\r\n    wma: wma,\r\n    wmv: wmv,\r\n    xhtml: html,\r\n    xlsx: xlsx,\r\n    xml: xml,\r\n    xul: xul,\r\n    zip: zip,\r\n    // threegp: threegp,\r\n    sevenzip: sevenzip,\r\n    python: python,\r\n    java: java,\r\n    react: react,\r\n    vue: vue,\r\n\r\n\r\n    fallBack: octet,\r\n};","\r\nimport { UPLOADSTATUS, ServerResponse } from \"../types\";\r\n\r\n/**\r\n * ExtFile === \"Extended File\".\r\n * This object \"extends\" the File Object\r\n */\r\nexport declare type ExtFile = {\r\n    /** \r\n     * An identifier for the extFile\r\n     */\r\n    id?: number | string | undefined;\r\n    /**\r\n     * The file object. Used mostly when user selects or drops files in the client sid.\r\n     */\r\n    file?: File;\r\n    /**\r\n     * The name of the file. Used mostly for displaying file data from server.\r\n     */\r\n    name?: string;\r\n    /**\r\n     * The type of the file. Used mostly for displaying file data from server.\r\n     */\r\n    type?: string;\r\n    /**\r\n     * The size of the file. Used mostly for displaying file data from server.\r\n     */\r\n    size?: number;\r\n    /**\r\n     * a flag that determines whether the file is \"valid\", \"not valid\" or it is \"not validated\".\r\n     */\r\n    valid?: boolean;\r\n    /**\r\n     * The list of errors when the file was validated\r\n     */\r\n    errors?: string[];\r\n    /**\r\n     * The current upload status. (e.g. \"uploading\")\r\n     */\r\n    uploadStatus?: UPLOADSTATUS | undefined;\r\n    /**\r\n     * A message that shows the result of the upload process\r\n     */\r\n    uploadMessage?: string;\r\n    /**\r\n     * A string representation or web url of the image\r\n     * that will be set to the \"src\" prop of an <img/> If\r\n     * given, the component will use this image source instead of\r\n     * reading the image file.\r\n     */\r\n    imageUrl?: string;\r\n    /**\r\n     * The XMLHttpRequest object for performing uploads to a server\r\n     */\r\n    xhr?: XMLHttpRequest;\r\n    /**\r\n     * The current percentage of upload progress.\r\n     * This value will have a higher priority over the upload progress value calculated inside the component.\r\n     * @default undefined\r\n     */\r\n    progress?: number;\r\n    /**\r\n     * The additional data that will be sent to the server\r\n     * when files are uploaded individually\r\n     */\r\n    extraUploadData?: Record<string, any>;\r\n    /**\r\n     * Any kind of extra data that could be needed.\r\n     */\r\n    extraData?: Record<string, Object>;\r\n    /**\r\n     * The upload response from server\r\n     */\r\n    serverResponse?: ServerResponse;\r\n    /**\r\n     * The url to be used to perform a GET request in order to download the file.\r\n     * This action is triggered when download button is clicked or pressed.\r\n     * In case onDownload prop is given\r\n     */\r\n    downloadUrl?: string;\r\n    /**\r\n     * A string representation or web url of the video\r\n     * that will be set to the \"src\" prop of an <video/> tag\r\n     * <video src={`${videoUrl}`} />\r\n     */\r\n    videoUrl?: string;\r\n    /**\r\n     * The url to be used to perform the upload request \r\n     */\r\n    uploadUrl?: string;\r\n}\r\n\r\n/**\r\n * A class definition for ExtFile.\r\n * This class has the purpose to allow the creation of instances\r\n * of an ExtFile for performing complex operations that cannot be\r\n * accomplished just by using the ExtFile type.\r\n * For instance, it can help in changing the value of some attributes\r\n * across different scopes thanks to memory reference.\r\n */\r\nexport class ExtFileInstance {\r\n    /**\r\n     * An identifier for the extFile\r\n     */\r\n    public id?: number | string;\r\n    /**\r\n     * The file object. Used mostly when user selects or drops files in the client sid.\r\n     */\r\n    public file?: File;\r\n    /**\r\n     * The name of the file. Used mostly for displaying file data from server.\r\n     */\r\n    public name?: string;\r\n    /**\r\n     * The type of the file. Used mostly for displaying file data from server.\r\n     */\r\n    public type?: string;\r\n    /**\r\n     * The size of the file. Used mostly for displaying file data from server.\r\n     */\r\n    public size?: number;\r\n\r\n    public imageUrl?: string;\r\n    /**\r\n     * A flag that determines whether the file is valid, not valid or it is not validated.\r\n     */\r\n    public valid?: boolean;\r\n    /**\r\n     * The list of errors when the file was validated\r\n     */\r\n    public errors?: string[];\r\n    /**\r\n     * A message that shows the result of the upload process\r\n     */\r\n    public uploadMessage?: string;\r\n    /**\r\n     * The current upload status. (e.g. \"uploading\")\r\n     */\r\n    public uploadStatus?: UPLOADSTATUS | undefined;\r\n    /**\r\n     * The current upload progress\r\n     */\r\n    public progress?: number;\r\n    /**\r\n     * The XMLHttpRequest object for performing uploads to a server\r\n     */\r\n    public xhr?: XMLHttpRequest;\r\n    /**\r\n     * Any kind of extra data that could be needed.\r\n     */\r\n    public extraData?: Record<string, Object>;\r\n    /**\r\n     * The additional data that will be sent to the server\r\n     * when filesare uploaded individually\r\n     */\r\n    public extraUploadData?: Record<string, any>;\r\n    /**\r\n     * The upload response from server\r\n     */\r\n    public serverResponse?: ServerResponse;\r\n    /**\r\n     * Url to perform a GET request in order to download the file.\r\n     * This  action is triggered when download button is clicked or pressed.\r\n     * In case onDownload prop is given\r\n     */\r\n    public downloadUrl?: string;\r\n    /**\r\n     * Link, URI, FIle object or string representation of a video\r\n     */\r\n    public videoUrl?: string;\r\n    /**\r\n     * The url to be used to perform the upload request \r\n     */\r\n    public uploadUrl?: string;\r\n\r\n    constructor(extFile: ExtFile) {\r\n        const {\r\n            id,\r\n            file,\r\n            name,\r\n            size,\r\n            type,\r\n            imageUrl,\r\n            valid,\r\n            errors,\r\n            uploadMessage,\r\n            uploadStatus,\r\n            progress,\r\n            xhr,\r\n            extraData,\r\n            extraUploadData,\r\n            serverResponse,\r\n            downloadUrl,\r\n            videoUrl,\r\n            uploadUrl\r\n        } = extFile;\r\n\r\n        this.id = id;\r\n        this.file = file;\r\n        this.name = name;\r\n        this.size = size;\r\n        this.type = type;\r\n        this.imageUrl = imageUrl;\r\n\r\n        this.valid = valid;\r\n        this.errors = errors;\r\n        this.uploadStatus = uploadStatus;\r\n        this.uploadMessage = uploadMessage;\r\n        this.progress = progress;\r\n        this.xhr = xhr;\r\n\r\n        this.extraData = extraData;\r\n        this.extraUploadData = extraUploadData;\r\n        this.serverResponse = serverResponse;\r\n\r\n        this.downloadUrl = downloadUrl;\r\n        this.videoUrl = videoUrl;\r\n        this.uploadUrl = uploadUrl;\r\n    }\r\n    /**\r\n     * method under construction\r\n     */\r\n    /*  private static kamuiFile() {\r\n \r\n     }\r\n    /**\r\n     * Copies all non undefined attributes from ExtFileInstance to a new ExtFile object\r\n     * @param extFileInstance the instance of ExtFile\r\n     * @returns an ExtFile object\r\n     */\r\n    static toExtFile(extFileInstance: ExtFileInstance): ExtFile {\r\n        //console.log(\"before toExtFile()\", extFileInstance);\r\n\r\n        let extFileClone: ExtFile = {}; // the new empty object\r\n        const extFileInstanceKeys = Object.keys(extFileInstance) as [keyof ExtFile];\r\n        const extFileInstanceValues = Object.values(extFileInstance) as Array<ExtFile[keyof ExtFile]>;\r\n        // let's copy all user properties into it\r\n        for (let i = 0; i < extFileInstanceValues.length; i++) {\r\n            const currentValue: ExtFile[keyof ExtFile] = extFileInstanceValues[i];\r\n\r\n\r\n            const currKey = extFileInstanceKeys[i];\r\n            if (currentValue !== undefined) {\r\n                extFileClone[currKey] = currentValue as ExtFile[keyof ExtFile] as never;\r\n            }\r\n        }\r\n        //console.log(\"after toExtFile()\", extFileClone);\r\n        //console.log(\"current extFileClone keys\",Object.keys( extFileClone).length);\r\n        return extFileClone;\r\n    }\r\n    /**\r\n     * Copies all non undefined attributes from ExtFileInstance to a new ExtFile object.\r\n     * @returns an ExtFile object\r\n     */\r\n    toExtFile(): ExtFile {\r\n        return ExtFileInstance.toExtFile(this);\r\n    }\r\n\r\n    /*   static mock = (id?: number): ExtFileInstance => {\r\n          return new ExtFileInstance(\r\n              extFileMock(id)\r\n          );\r\n      } */\r\n    static hasValidUrl(extFile: ExtFile | ExtFileInstance): boolean {\r\n        return extFile.uploadUrl && extFile.uploadUrl.length > 0;\r\n    }\r\n    static someValidUrl(extFile: ExtFile[] | ExtFileInstance[]): boolean {\r\n        return extFile.some(ExtFileInstance.hasValidUrl);\r\n    }\r\n}\r\n\r\n\r\n","import { ExtFileInstance, ExtFile } from \"./ExtFile\";\r\n\r\nexport class ExtFileManager {\r\n    private static nextId: number = 0;\r\n    static fileLists: Record<number | string, ExtFileInstance[] | undefined> = {};\r\n    /**\r\n     * Increases the id counter and returns the next id available.\r\n     * @returns the next integer id available\r\n     */\r\n    public static getNextId(): number {\r\n        ExtFileManager.nextId++;\r\n        return ExtFileManager.nextId;\r\n    }\r\n    /**\r\n     * Updates a dui file list given an id\r\n     * @param id id of the fileList\r\n     * @param extFiles list of DuiFiles forinitializing the array\r\n     * @returns the id of the fileList\r\n     */\r\n    public static setFileList(\r\n        id: number | string | undefined,\r\n        extFilesInstances: ExtFileInstance[]\r\n    ): number | string {\r\n        if (!id) {\r\n            return 0;\r\n        } else {\r\n            ExtFileManager.fileLists[id] = [...extFilesInstances];\r\n\r\n            return id;\r\n        }\r\n\r\n    }\r\n    /**\r\n     * Generates a new ID\r\n     * @returns the next Id asociated with a DuiFIle list\r\n     */\r\n    public static createFileListMap(): number {\r\n        const nextId: number = ExtFileManager.getNextId();\r\n        ExtFileManager.fileLists[nextId] = [];\r\n\r\n        return nextId;\r\n    }\r\n\r\n    /**\r\n     * Deletes a list map\r\n     * @returns the next Id asociated with a DuiFIle list\r\n     */\r\n    public static removeFileListMap(id?: number | string): number | string {\r\n        if (!id) {\r\n            return 0;\r\n        } else {\r\n            try {\r\n                ExtFileManager.fileLists[id] = undefined;\r\n                return id;\r\n            } catch (error) {\r\n                if (process.env.NODE_ENV === \"development\")\r\n                    console.error(\"Error on remove\", error);\r\n                return 0;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * \r\n     * @param id the id of the dropzone\r\n     * @returns \r\n     */\r\n    public static getExtFileInstanceList(\r\n        id?: number | string\r\n    ): ExtFileInstance[] | undefined {\r\n        try {\r\n            if (!id) {\r\n                return undefined;\r\n            }\r\n            return ExtFileManager.fileLists[id];\r\n        } catch (error) {\r\n            if (process.env.NODE_ENV === \"development\")\r\n                console.error(\"Error on getExtFileInstanceList\", error);\r\n            return undefined;\r\n        }\r\n    }\r\n    /**\r\n     * Updates(replaces) the extFile list on preparing stage and returns the new array.\r\n     * Removes the non valid files if cleanOnUpload is true and validateFiles is also true\r\n     * Then sets on preparing stage all files according to the following creiteria:\r\n     * If theuploadStatus is diferent than \"sucess\" AND\r\n     * then, update the files on preparing stage. Otherwise keep the extFile props.\r\n     * Finally, updates the ExtFileInstance list on ExtFileManager.\r\n     * @param dropzoneId the id to access the right list\r\n     * @param localFiles the list of extFiles\r\n     * @param validateFiles flag that indicates that validation is active or o¿not\r\n     * @param cleanOnUpload flag to determine whther to clena the list oof non valid files or not\r\n     * @returns a list of ExtFileInstance\r\n     */\r\n    public static setFileListMapPreparing(\r\n        dropzoneId: number | string,\r\n        localFiles: ExtFile[],\r\n        validateFiles: boolean,\r\n        cleanOnUpload: boolean\r\n    ): ExtFileInstance[] | undefined {\r\n        //console.log(\"setFileListMapPreparing before if\", dropzoneId, localFiles, cleanOnUpload);\r\n\r\n        if (!(typeof dropzoneId === \"number\" || typeof dropzoneId === \"string\")) return undefined;\r\n\r\n        //console.log(\"setFileListMapPreparing before try\", localFiles, cleanOnUpload);\r\n        try {\r\n\r\n            let resultExtList: ExtFileInstance[] = [];\r\n\r\n            //initializes the extFileLInstance list\r\n            let temLocalFiles: ExtFile[] = [...localFiles];\r\n\r\n            //remove non valids if cleanOnUpload is true and validateFiles is also true\r\n            if (cleanOnUpload && validateFiles) {\r\n                // clean on Upload is true, so non valid files must be removed\r\n                temLocalFiles = temLocalFiles.filter(extFile => extFile.valid)\r\n                //console.log(\"temLocalFiles filter\", temLocalFiles);\r\n            }\r\n\r\n            //console.log(\"setFileListMapPreparing after remove non valids\", temLocalFiles);\r\n\r\n            if (validateFiles) {\r\n                // validation flag was set to true, so only valid=true files will be set to \"preparing\"\r\n\r\n                //so, only valid files was kept in the temLocalfiles array\r\n                //now set the preparing state only for files with uploadStatus !== \"success\"\r\n                temLocalFiles =\r\n                    temLocalFiles\r\n                        .map(extFile => {\r\n                            if (extFile.uploadStatus !== \"success\" && extFile.valid) {\r\n                                return { ...extFile, uploadStatus: \"preparing\" }\r\n                            } else {\r\n                                return { ...extFile }\r\n                            }\r\n                        });\r\n            } else {\r\n                // all files will be set to \"preparing\" whether the valid value\r\n                // except those files with uploadStatus ===\"success\"\r\n                temLocalFiles =\r\n                    temLocalFiles\r\n                        .map(extFile => {\r\n                            if (extFile.uploadStatus !== \"success\") {\r\n                                return { ...extFile, uploadStatus: \"preparing\" }\r\n                            } else {\r\n                                return { ...extFile }\r\n                            }\r\n                        });\r\n            }\r\n\r\n            //console.log(\"setFileListMapPreparing result\", temLocalFiles);\r\n\r\n            //converto to Object instances\r\n            resultExtList = temLocalFiles.map(F => new ExtFileInstance(F));\r\n            //console.log(\"setFileListMapPreparing RESULT resultExtList\", resultExtList);\r\n\r\n            const resultSet = ExtFileManager.setFileList(dropzoneId, resultExtList);\r\n            //console.log(\"setFileListMapPreparing RESULT resultSet\", resultSet);\r\n\r\n            return resultExtList;\r\n            // return ExtFileManager.fileLists[dropzoneId];\r\n        } catch (error) {\r\n            if (process.env.NODE_ENV === \"development\")\r\n                console.error(\"setFileListMapPreparing Error on get List\", error);\r\n            return undefined;\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    /**\r\n * Updates(replaces) the extFile list on preparing stage and returns the new array.\r\n * Removes the non valid files if cleanOnUpload is true and validateFiles is also true\r\n * Then sets on preparing stage all files according to the following creiteria:\r\n * If theuploadStatus is diferent than \"sucess\" AND\r\n * then, update the files on preparing stage. Otherwise keep the extFile props.\r\n * Finally, updates the ExtFileInstance list on ExtFileManager.\r\n * @param dropzoneId the id to access the right list\r\n * @param localFiles the list of extFiles\r\n * @param validateFiles flag that indicates that validation is active or o¿not\r\n * @param cleanOnUpload flag to determine whther to clena the list oof non valid files or not\r\n * @returns a list of ExtFileInstance\r\n */\r\n    public static setFileListMapPreparing2(\r\n        dropzoneId: number | string,\r\n        localFiles: ExtFile[],\r\n        validateFiles: boolean,\r\n        cleanOnUpload: boolean\r\n    ): ExtFileInstance[] | undefined {\r\n\r\n        ExtFileManager.setFileList(dropzoneId, localFiles.map(F => new ExtFileInstance({ ...F, uploadStatus: \"preparing\" })));\r\n\r\n        return ExtFileManager.getExtFileInstanceList(dropzoneId);\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * \r\n     * @param dropzoneId \r\n     * @param index \r\n     * @param incommingDuiFile \r\n     * @returns \r\n     */\r\n    /* public static updateFileListMapPreparingById(\r\n        dropzoneId: number,\r\n        index: number,\r\n        incommingDuiFile: ExtFileInstance\r\n    ): ExtFileInstance[] | undefined {\r\n        if (!(typeof dropzoneId === \"number\") || !(typeof index === \"number\") || index > 0) return undefined;\r\n        const extFileList: ExtFileInstance[] | undefined = ExtFileManager.fileLists[dropzoneId];\r\n\r\n        if (!(extFileList && extFileList.length > 0)) return undefined;\r\n        extFileList[index]=\r\n        try {\r\n            ExtFileManager.setFileList(dropzoneId, [\r\n                ...localFiles.map(\r\n                    (x) =>\r\n                        new ExtFileInstance({ ...x, uploadStatus: \"preparing\" })\r\n                ),\r\n            ]);\r\n            return ExtFileManager.fileLists[dropzoneId];\r\n        } catch (error) {\r\n            if (process.env.NODE_ENV === \"development\")\r\n            console.error(\"Error on get List\", error);\r\n            return undefined;\r\n        }\r\n\r\n    } */\r\n}","import { ExtFile } from \"./ExtFile\";\r\nimport { Method } from \"./method\"\r\n\r\nexport type UploadConfig = {\r\n    /**\r\n     * The url endpoint to upload the file.\r\n     * e.g. https://www.myasomwbackend/uploads/file\r\n     */\r\n    url?: string;\r\n    /**\r\n     * upload method, can be POST | PUT | PATCH\r\n     * @default \"POST\"\r\n     */\r\n    method?: Method;\r\n    /**\r\n     * Request headers for http request.\r\n     * e.g.\r\n     * ```jsx\r\n     * headers = { \r\n     *    \"content-type\": \"multipart/form-data\",\r\n     *    Authorization: \"Bearer YOUR_BEARER_TOKEN_GOES_HERE\",\r\n     * } \r\n     * ```\r\n     */\r\n    headers?: Record<string, string>;\r\n    /**\r\n     * the label to use in request\r\n     * On server this must be the label to get the file.\r\n     * @default \"file\"\r\n     */\r\n    uploadLabel?: string;\r\n    /**\r\n     * Flag for indicating whther to remove the non-valid files\r\n     * before starting the upload process.\r\n     * This flag is valid only if validation is enable\r\n     */\r\n    cleanOnUpload?: boolean;\r\n    /**\r\n     * If true, onDrop event or file selection not only will make Dropzone to return the list of files, but also\r\n     * it will start the upload stage for the files if at least url was set\r\n     * By default is false\r\n     */\r\n    autoUpload?: boolean;\r\n    /**\r\n     * The time that will last the \"preparing\" stage\r\n     * By default is 1500 miliseconds = 1.5 seconds\r\n     */\r\n    preparingTime?: number;\r\n    /**\r\n     * A message to show in the footer when the uploading process takes place.\r\n     */\r\n    uploadingMessage?: string;\r\n    /**\r\n     * A function to generate the upload url given an ExtFile\r\n     */\r\n    urlFromExtFile?: (f: ExtFile) => string;\r\n    /**\r\n     * If true, the file will be uploaded as blob rather than FormData\r\n     * @default false\r\n     */\r\n    asBlob?: boolean;\r\n    /**\r\n     * If true, the file will be uploaded in chunks\r\n     * @default false\r\n     */\r\n    //chunk?: boolean;\r\n    /**\r\n     * If given, the file will be uploaded in chunks. Also the size of each chunk will be this value in megabytes.\r\n     * @default undefined\r\n     */\r\n    chunkSize?: number;\r\n    /**\r\n     * If given, the file will be uploaded in chunks. Also the number of chunks will be this value in megabytes.\r\n     * @default undefined\r\n     */\r\n    numberOfChunks?: number;\r\n}\r\n\r\nexport const createUploadConfig = (\r\n    url?: string,\r\n    method?: Method,\r\n    headers?: Record<string, string>,\r\n    uploadLabel?: string,\r\n    cleanonUpload?: boolean\r\n) => {\r\n    return {\r\n        url,\r\n        method,\r\n        headers,\r\n        uploadLabel,\r\n        cleanonUpload\r\n    }\r\n}","\r\n/**\r\n * A syntetic file creator.\r\n * Very useful for tests\r\n */\r\nexport abstract class SyntheticFile {\r\n    /**\r\n * \r\n * @param name the file name\r\n * @param size the file size\r\n * @param type the file type\r\n * @returns \r\n */\r\n    static createFile = (name: string, size: number, type: string) => {\r\n        const file = new File([], name, { type });\r\n        Object.defineProperty(file, \"size\", {\r\n            get() {\r\n                return size;\r\n            },\r\n        });\r\n        return file;\r\n    };\r\n    /**\r\n    * \r\n    * @param size the file size\r\n    * @returns a syntetic File object instance\r\n    */\r\n    static create_aac = (size?: number): File => {\r\n        return SyntheticFile.createFile(\"acc_audio-file-with-large-name.aac\", size ? size : 3516516, \"audio/aac\");\r\n    }\r\n    /**\r\n    * \r\n    * @param size the file size\r\n    * @returns a syntetic File object instance\r\n    */\r\n    static create_abw = (size?: number): File => {\r\n        return SyntheticFile.createFile(\"abiword-file-with-large-name.abw\", size ? size : 3516516, \"application/x-abiword\");\r\n    }\r\n    /**\r\n    * \r\n    * @param size the file size\r\n    * @returns a syntetic File object instance\r\n    */\r\n    static create_freearc = (size?: number): File => {\r\n        return SyntheticFile.createFile(\"freearc-file-with-large-name.arc\", size ? size : 3516516, \"application/x-freearc\");\r\n    }\r\n    /**\r\n    * \r\n    * @param size the file size\r\n    * @returns a syntetic File object instance\r\n    */\r\n    static create_avi = (size?: number): File => {\r\n        return SyntheticFile.createFile(\"avi-file-with-large-name.avi\", size ? size : 3516516, \"video/x-msvideo\");\r\n    }\r\n    /**\r\n    * \r\n    * @param size the file size\r\n    * @returns a syntetic File object instance\r\n    */\r\n    static create_azw = (size?: number): File => {\r\n        return SyntheticFile.createFile(\"amazon_kindle_ebook-file-with-large-name.azw\", size ? size : 3516516, \"application/vnd.amazon.ebook\");\r\n    }\r\n    /**\r\n    * \r\n    * @param size the file size\r\n    * @returns a syntetic File object instance\r\n    */\r\n    static create_octet = (size?: number): File => {\r\n        return SyntheticFile.createFile(\"binary_octet_stream-file-with-large-name.bin\", size ? size : 3516516, \"application/octet-stream\");\r\n    }\r\n    /**\r\n    * \r\n    * @param size the file size\r\n    * @returns a syntetic File object instance\r\n    */\r\n    static create_bmp = (size?: number): File => {\r\n        return SyntheticFile.createFile(\"bit_map-file-with-large-name.bmp\", size ? size : 3516516, \"image/bmp\");\r\n    }\r\n    /**\r\n    * \r\n    * @param size the file size\r\n    * @returns a syntetic File object instance\r\n    */\r\n    static create_bz = (size?: number): File => {\r\n        return SyntheticFile.createFile(\"x_bzip-file-with-large-name.bz\", size ? size : 3516516, \"application/x-bzip\");\r\n    }\r\n    /**\r\n    * \r\n    * @param size the file size\r\n    * @returns a syntetic File object instance\r\n    */\r\n    static create_bz2 = (size?: number): File => {\r\n        return SyntheticFile.createFile(\"x_bzip_2-file-with-large-name.bz2\", size ? size : 3516516, \"application/x-bzip2\");\r\n    }\r\n    /**\r\n    * \r\n    * @param size the file size\r\n    * @returns a syntetic File object instance\r\n    */\r\n    static create_cda = (size?: number): File => {\r\n        return SyntheticFile.createFile(\"cd_audio-file-with-large-name.cda\", size ? size : 3516516, \"application/x-cdf\");\r\n    }\r\n    /**\r\n    * \r\n    * @param size the file size\r\n    * @returns a syntetic File object instance\r\n    */\r\n    static create_csh = (size?: number): File => {\r\n        return SyntheticFile.createFile(\"test-file-with-large-name.csh\", size ? size : 3516516, \"application/x-csh\");\r\n    }\r\n    /**\r\n    * \r\n    * @param size the file size\r\n    * @returns a syntetic File object instance\r\n    */\r\n    static create_css = (size?: number): File => {\r\n        return SyntheticFile.createFile(\"test-file-with-large-name.css\", size ? size : 3516516, \"text/css\");\r\n    }\r\n    /**\r\n    * \r\n    * @param size the file size\r\n    * @returns a syntetic File object instance\r\n    */\r\n    static create_csv = (size?: number): File => {\r\n        return SyntheticFile.createFile(\"test-file-with-large-name.csv\", size ? size : 3516516, \"text/csv\");\r\n    }\r\n    /**\r\n    * \r\n    * @param size the file size\r\n    * @returns a syntetic File object instance\r\n    */\r\n    static create_doc = (size?: number): File => {\r\n        return SyntheticFile.createFile(\"test-file-with-large-name.doc\", size ? size : 3516516, \"application/msword\");\r\n    }\r\n    /**\r\n    * \r\n    * @param size the file size\r\n    * @returns a syntetic File object instance\r\n    */\r\n    static create_docx = (size?: number): File => {\r\n        return SyntheticFile.createFile(\"test-file-with-large-name.docx\", size ? size : 3516516, \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\");\r\n    }\r\n    /**\r\n    * \r\n    * @param size the file size\r\n    * @returns a syntetic File object instance\r\n    */\r\n    static create_eot = (size?: number): File => {\r\n        return SyntheticFile.createFile(\"test-file-with-large-name.eot\", size ? size : 3516516, \"application/vnd.ms-fontobject\");\r\n    }\r\n    /**\r\n    * \r\n    * @param size the file size\r\n    * @returns a syntetic File object instance\r\n    */\r\n    static create_epub = (size?: number): File => {\r\n        return SyntheticFile.createFile(\"test-file-with-large-name.epub\", size ? size : 3516516, \"application/epub+zip\");\r\n    }\r\n    /**\r\n    * \r\n    * @param size the file size\r\n    * @returns a syntetic File object instance\r\n    */\r\n    static create_gzip = (size?: number): File => {\r\n        return SyntheticFile.createFile(\"test-file-with-large-name.gz\", size ? size : 3516516, \"application/gzip\");\r\n    }\r\n    /**\r\n    * \r\n    * @param size the file size\r\n    * @returns a syntetic File object instance\r\n    */\r\n    static create_gif = (size?: number): File => {\r\n        return SyntheticFile.createFile(\"test-file-with-large-name.gif\", size ? size : 3516516, \"image/gif\");\r\n    }\r\n    /**\r\n    * \r\n    * @param size the file size\r\n    * @returns a syntetic File object instance\r\n    */\r\n    static create_htm = (size?: number): File => {\r\n        return SyntheticFile.createFile(\"test-file-with-large-name.htm\", size ? size : 3516516, \"text/html\");\r\n    }\r\n    /**\r\n    * \r\n    * @param size the file size\r\n    * @returns a syntetic File object instance\r\n    */\r\n    static create_html = (size?: number): File => {\r\n        return SyntheticFile.createFile(\"test-file-with-large-name.html\", size ? size : 3516516, \"text/html\");\r\n    }\r\n    /**\r\n    * \r\n    * @param size the file size\r\n    * @returns a syntetic File object instance\r\n    */\r\n    static create_ico = (size?: number): File => {\r\n        return SyntheticFile.createFile(\"test-file-with-large-name.ico\", size ? size : 3516516, \"image/vnd.microsoft.icon\");\r\n    }\r\n    /**\r\n    * \r\n    * @param size the file size\r\n    * @returns a syntetic File object instance\r\n    */\r\n    static create_icalendar = (size?: number): File => {\r\n        return SyntheticFile.createFile(\"test-file-with-large-name.ics\", size ? size : 3516516, \"text/calendar\");\r\n    }\r\n    /**\r\n    * \r\n    * @param size the file size\r\n    * @returns a syntetic File object instance\r\n    */\r\n    static create_jar = (size?: number): File => {\r\n        return SyntheticFile.createFile(\"test-file-with-large-name.jar\", size ? size : 3516516, \"application/java-archive\");\r\n    }\r\n    /**\r\n    * \r\n    * @param size the file size\r\n    * @returns a syntetic File object instance\r\n    */\r\n    static create_jpeg = (size?: number): File => {\r\n        return SyntheticFile.createFile(\"test-file-with-large-name.jpeg\", size ? size : 3516516, \"image/jpeg\");\r\n    }\r\n    /**\r\n    * \r\n    * @param size the file size\r\n    * @returns a syntetic File object instance\r\n    */\r\n    static create_jpg = (size?: number): File => {\r\n        return SyntheticFile.createFile(\"test-file-with-large-name.jpg\", size ? size : 3516516, \"image/jpeg\");\r\n    }\r\n    /**\r\n    * \r\n    * @param size the file size\r\n    * @returns a syntetic File object instance\r\n    */\r\n    static create_js = (size?: number): File => {\r\n        return SyntheticFile.createFile(\"test-file-with-large-name.js\", size ? size : 3516516, \"text/javascript\");\r\n    }\r\n    /**\r\n    * \r\n    * @param size the file size\r\n    * @returns a syntetic File object instance\r\n    */\r\n    static create_json = (size?: number): File => {\r\n        return SyntheticFile.createFile(\"test-file-with-large-name.json\", size ? size : 3516516, \"application/json\");\r\n    }\r\n    /**\r\n    * \r\n    * @param size the file size\r\n    * @returns a syntetic File object instance\r\n    */\r\n    static create_jsonld = (size?: number): File => {\r\n        return SyntheticFile.createFile(\"test-file-with-large-name.jsonld\", size ? size : 3516516, \"application/ld+json\");\r\n    }\r\n    /**\r\n    * \r\n    * @param size the file size\r\n    * @returns a syntetic File object instance\r\n    */\r\n    static create_mid = (size?: number): File => {\r\n        return SyntheticFile.createFile(\"test-file-with-large-name.mid\", size ? size : 3516516, \"audio/midi\");\r\n    }\r\n    /**\r\n    * \r\n    * @param size the file size\r\n    * @returns a syntetic File object instance\r\n    */\r\n    static create_x_mid = (size?: number): File => {\r\n        return SyntheticFile.createFile(\"test-file-with-large-name.mid\", size ? size : 3516516, \"audio/x-midi\");\r\n    }\r\n    /**\r\n    * \r\n    * @param size the file size\r\n    * @returns a syntetic File object instance\r\n    */\r\n    static create_midi = (size?: number): File => {\r\n        return SyntheticFile.createFile(\"test-file-with-large-name.midi\", size ? size : 3516516, \"audio/x-midi\");\r\n    }\r\n    /**\r\n    * \r\n    * @param size the file size\r\n    * @returns a syntetic File object instance\r\n    */\r\n    static create_x_midi = (size?: number): File => {\r\n        return SyntheticFile.createFile(\"test-file-with-large-name.midi\", size ? size : 3516516, \"audio/x-midi\");\r\n    }\r\n    /**\r\n    * \r\n    * @param size the file size\r\n    * @returns a syntetic File object instance\r\n    */\r\n    static create_mjs = (size?: number): File => {\r\n        return SyntheticFile.createFile(\"test-file-with-large-name.mjs\", size ? size : 3516516, \"text/javascript\");\r\n    }\r\n    /**\r\n    * \r\n    * @param size the file size\r\n    * @returns a syntetic File object instance\r\n    */\r\n    static create_mp3 = (size?: number): File => {\r\n        return SyntheticFile.createFile(\"test-file-with-large-name.mp3\", size ? size : 3516516, \"audio/mpeg\");\r\n    }\r\n    /**\r\n    * \r\n    * @param size the file size\r\n    * @returns a syntetic File object instance\r\n    */\r\n    static create_mp4 = (size?: number): File => {\r\n        return SyntheticFile.createFile(\"test-file-with-large-name.mp4\", size ? size : 3516516, \"video/mp4\");\r\n    }\r\n    /**\r\n    * \r\n    * @param size the file size\r\n    * @returns a syntetic File object instance\r\n    */\r\n    static create_mpeg = (size?: number): File => {\r\n        return SyntheticFile.createFile(\"test-file-with-large-name.mpeg\", size ? size : 3516516, \"video/mpeg\");\r\n    }\r\n    /**\r\n    * \r\n    * @param size the file size\r\n    * @returns a syntetic File object instance\r\n    */\r\n    static create_mpkg = (size?: number): File => {\r\n        return SyntheticFile.createFile(\"test-file-with-large-name.mpkg\", size ? size : 3516516, \"application/vnd.apple.installer+xml\");\r\n    }\r\n    /**\r\n    * \r\n    * @param size the file size\r\n    * @returns a syntetic File object instance\r\n    */\r\n    static create_odp = (size?: number): File => {\r\n        return SyntheticFile.createFile(\"test-file-with-large-name.odp\", size ? size : 3516516, \"application/vnd.oasis.opendocument.presentation\");\r\n    }\r\n    /**\r\n    * \r\n    * @param size the file size\r\n    * @returns a syntetic File object instance\r\n    */\r\n    static create_ods = (size?: number): File => {\r\n        return SyntheticFile.createFile(\"test-file-with-large-name.ods\", size ? size : 3516516, \"application/vnd.oasis.opendocument.spreadsheet\");\r\n    }\r\n    /**\r\n    * \r\n    * @param size the file size\r\n    * @returns a syntetic File object instance\r\n    */\r\n    static create_odt = (size?: number): File => {\r\n        return SyntheticFile.createFile(\"test-file-with-large-name.odt\", size ? size : 3516516, \"application/vnd.oasis.opendocument.text\");\r\n    }\r\n    /**\r\n    * \r\n    * @param size the file size\r\n    * @returns a syntetic File object instance\r\n    */\r\n    static create_oga = (size?: number): File => {\r\n        return SyntheticFile.createFile(\"test-file-with-large-name.oga\", size ? size : 3516516, \"audio/ogg\");\r\n    }\r\n    /**\r\n    * \r\n    * @param size the file size\r\n    * @returns a syntetic File object instance\r\n    */\r\n    static create_ogv = (size?: number): File => {\r\n        return SyntheticFile.createFile(\"test-file-with-large-name.ogv\", size ? size : 3516516, \"video/ogg\");\r\n    }\r\n    /**\r\n    * \r\n    * @param size the file size\r\n    * @returns a syntetic File object instance\r\n    */\r\n    static create_ogx = (size?: number): File => {\r\n        return SyntheticFile.createFile(\"test-file-with-large-name.ogx\", size ? size : 3516516, \"application/ogg\");\r\n    }\r\n    /**\r\n    * \r\n    * @param size the file size\r\n    * @returns a syntetic File object instance\r\n    */\r\n    static create_opus = (size?: number): File => {\r\n        return SyntheticFile.createFile(\"test-file-with-large-name.opus\", size ? size : 3516516, \"audio/opus\");\r\n    }\r\n    /**\r\n    * \r\n    * @param size the file size\r\n    * @returns a syntetic File object instance\r\n    */\r\n    static create_otf = (size?: number): File => {\r\n        return SyntheticFile.createFile(\"test-file-with-large-name.otf\", size ? size : 3516516, \"font/otf\");\r\n    }\r\n    /**\r\n    * \r\n    * @param size the file size\r\n    * @returns a syntetic File object instance\r\n    */\r\n    static create_png = (size?: number): File => {\r\n        return SyntheticFile.createFile(\"test-file-with-large-name.png\", size ? size : 3516516, \"image/png\");\r\n    }\r\n    /**\r\n    * \r\n    * @param size the file size\r\n    * @returns a syntetic File object instance\r\n    */\r\n    static create_pdf = (size?: number): File => {\r\n        return SyntheticFile.createFile(\"test-file-with-large-name.pdf\", size ? size : 3516516, \"application/pdf\");\r\n    }\r\n    /**\r\n    * \r\n    * @param size the file size\r\n    * @returns a syntetic File object instance\r\n    */\r\n    static create_php = (size?: number): File => {\r\n        return SyntheticFile.createFile(\"test-file-with-large-name.php\", size ? size : 3516516, \"application/x-httpd-php\");\r\n    }\r\n    /**\r\n    * \r\n    * @param size the file size\r\n    * @returns a syntetic File object instance\r\n    */\r\n    static create_ppt = (size?: number): File => {\r\n        return SyntheticFile.createFile(\"test-file-with-large-name.ppt\", size ? size : 3516516, \"application/vnd.ms-powerpoint\");\r\n    }\r\n    /**\r\n    * \r\n    * @param size the file size\r\n    * @returns a syntetic File object instance\r\n    */\r\n    static create_pptx = (size?: number): File => {\r\n        return SyntheticFile.createFile(\"test-file-with-large-name.pptx\", size ? size : 3516516, \"application/vnd.openxmlformats-officedocument.presentationml.presentation\");\r\n    }\r\n    /**\r\n    * \r\n    * @param size the file size\r\n    * @returns a syntetic File object instance\r\n    */\r\n    static create_rar = (size?: number): File => {\r\n        return SyntheticFile.createFile(\"test-file-with-large-name.rar\", size ? size : 3516516, \"application/vnd.rar\");\r\n    }\r\n    /**\r\n    * \r\n    * @param size the file size\r\n    * @returns a syntetic File object instance\r\n    */\r\n    static create_rtf = (size?: number): File => {\r\n        return SyntheticFile.createFile(\"test-file-with-large-name.rtf\", size ? size : 3516516, \"application/rtf\");\r\n    }\r\n    /**\r\n    * \r\n    * @param size the file size\r\n    * @returns a syntetic File object instance\r\n    */\r\n    static create_sh = (size?: number): File => {\r\n        return SyntheticFile.createFile(\"test-file-with-large-name.sh\", size ? size : 3516516, \"application/x-sh\");\r\n    }\r\n    /**\r\n    * \r\n    * @param size the file size\r\n    * @returns a syntetic File object instance\r\n    */\r\n    static create_svg = (size?: number): File => {\r\n        return SyntheticFile.createFile(\"test-file-with-large-name.svg\", size ? size : 3516516, \"image/svg+xml\");\r\n    }\r\n    /**\r\n    * \r\n    * @param size the file size\r\n    * @returns a syntetic File object instance\r\n    */\r\n    static create_swf = (size?: number): File => {\r\n        return SyntheticFile.createFile(\"test-file-with-large-name.swf\", size ? size : 3516516, \"application/x-shockwave-flash\");\r\n    }\r\n    /**\r\n    * \r\n    * @param size the file size\r\n    * @returns a syntetic File object instance\r\n    */\r\n    static create_tar = (size?: number): File => {\r\n        return SyntheticFile.createFile(\"test-file-with-large-name.tar\", size ? size : 3516516, \"application/x-tar\");\r\n    }\r\n    /**\r\n    * \r\n    * @param size the file size\r\n    * @returns a syntetic File object instance\r\n    */\r\n    static create_tif = (size?: number): File => {\r\n        return SyntheticFile.createFile(\"test-file-with-large-name.tif\", size ? size : 3516516, \"image/tiff\");\r\n    }\r\n    /**\r\n    * \r\n    * @param size the file size\r\n    * @returns a syntetic File object instance\r\n    */\r\n    static create_tiff = (size?: number): File => {\r\n        return SyntheticFile.createFile(\"test-file-with-large-name.tiff\", size ? size : 3516516, \"image/tiff\");\r\n    }\r\n    /**\r\n    * \r\n    * @param size the file size\r\n    * @returns a syntetic File object instance\r\n    */\r\n    static create_ts = (size?: number): File => {\r\n        return SyntheticFile.createFile(\"mp2t_video-file-with-large-name.ts\", size ? size : 3516516, \"video/mp2t\");\r\n    }\r\n    /**\r\n    * \r\n    * @param size the file size\r\n    * @returns a syntetic File object instance\r\n    */\r\n    static create_ttf = (size?: number): File => {\r\n        return SyntheticFile.createFile(\"test-file-with-large-name.ttf\", size ? size : 3516516, \"font/ttf\");\r\n    }\r\n    /**\r\n    * \r\n    * @param size the file size\r\n    * @returns a syntetic File object instance\r\n    */\r\n    static create_text = (size?: number): File => {\r\n        return SyntheticFile.createFile(\"test-file-with-large-name.txt\", size ? size : 3516516, \"text/plain\");\r\n    }\r\n    /**\r\n    * \r\n    * @param size the file size\r\n    * @returns a syntetic File object instance\r\n    */\r\n    static create_typescript = (size?: number): File => {\r\n        return SyntheticFile.createFile(\"typescript-file-with-large-name.ts\", size ? size : 3516516, \"text/plain\");\r\n    }\r\n    /**\r\n    * \r\n    * @param size the file size\r\n    * @returns a syntetic File object instance\r\n    */\r\n    static create_vsd = (size?: number): File => {\r\n        return SyntheticFile.createFile(\"ms_visio-file-with-large-name.vsd\", size ? size : 3516516, \"application/vnd.visio\");\r\n    }\r\n    /**\r\n    * \r\n    * @param size the file size\r\n    * @returns a syntetic File object instance\r\n    */\r\n    static create_wav = (size?: number): File => {\r\n        return SyntheticFile.createFile(\"wav_audio-file-with-large-name.wav\", size ? size : 3516516, \"audio/wav\");\r\n    }\r\n    /**\r\n    * \r\n    * @param size the file size\r\n    * @returns a syntetic File object instance\r\n    */\r\n    static create_weba = (size?: number): File => {\r\n        return SyntheticFile.createFile(\"web_audio-file-with-large-name.weba\", size ? size : 3516516, \"audio/webm\");\r\n    }\r\n    /**\r\n    * \r\n    * @param size the file size\r\n    * @returns a syntetic File object instance\r\n    */\r\n    static create_webm = (size?: number): File => {\r\n        return SyntheticFile.createFile(\"web_video-file-with-large-name.webm\", size ? size : 3516516, \"video/webm\");\r\n    }\r\n    /**\r\n    * \r\n    * @param size the file size\r\n    * @returns a syntetic File object instance\r\n    */\r\n    static create_webp = (size?: number): File => {\r\n        return SyntheticFile.createFile(\"web_image-file-with-large-name.webp\", size ? size : 3516516, \"image/webp\");\r\n    }\r\n    /**\r\n    * \r\n    * @param size the file size\r\n    * @returns a syntetic File object instance\r\n    */\r\n    static create_woff = (size?: number): File => {\r\n        return SyntheticFile.createFile(\"test-file-with-large-name.woff\", size ? size : 3516516, \"font/woff\");\r\n    }\r\n    /**\r\n    * \r\n    * @param size the file size\r\n    * @returns a syntetic File object instance\r\n    */\r\n    static create_woff2 = (size?: number): File => {\r\n        return SyntheticFile.createFile(\"test-file-with-large-name.woff2\", size ? size : 3516516, \"font/woff2\");\r\n    }\r\n    /**\r\n    * \r\n    * @param size the file size\r\n    * @returns a syntetic File object instance\r\n    */\r\n    static create_xhtml = (size?: number): File => {\r\n        return SyntheticFile.createFile(\"test-file-with-large-name.xhtml\", size ? size : 3516516, \"application/xhtml+xml\");\r\n    }\r\n    /**\r\n    * \r\n    * @param size the file size\r\n    * @returns a syntetic File object instance\r\n    */\r\n    static create_xlsx = (size?: number): File => {\r\n        return SyntheticFile.createFile(\"test-file-with-large-name.xls\", size ? size : 3516516, \"application/vnd.ms-excel\");\r\n    }\r\n    /**\r\n    * \r\n    * @param size the file size\r\n    * @returns a syntetic File object instance\r\n    */\r\n    static create_xls = (size?: number): File => {\r\n        return SyntheticFile.createFile(\"test-file-with-large-name.xlsx\", size ? size : 3516516, \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\");\r\n    }\r\n    /**\r\n    * \r\n    * @param size the file size\r\n    * @returns a syntetic File object instance\r\n    */\r\n    static create_xml = (size?: number): File => {\r\n        return SyntheticFile.createFile(\"xml-file-with-large-name.xml\", size ? size : 3516516, \"application/xml\");\r\n    }\r\n    /**\r\n    * \r\n    * @param size the file size\r\n    * @returns a syntetic File object instance\r\n    */\r\n    static create_xml_txt = (size?: number): File => {\r\n        return SyntheticFile.createFile(\"xml_plain_text-file-with-large-name.xml\", size ? size : 3516516, \"application/xml\");\r\n    }\r\n    /**\r\n    * \r\n    * @param size the file size\r\n    * @returns a syntetic File object instance\r\n    */\r\n    static create_xul = (size?: number): File => {\r\n        return SyntheticFile.createFile(\"test-file-with-large-name.xul\", size ? size : 3516516, \"application/vnd.mozilla.xul+xml\");\r\n    }\r\n    /**\r\n    * \r\n    * @param size the file size\r\n    * @returns a syntetic File object instance\r\n    */\r\n    static create_zip = (size?: number): File => {\r\n        return SyntheticFile.createFile(\"zip-file-with-large-name.zip\", size ? size : 3516516, \"application/zip\");\r\n    }\r\n    /**\r\n    * \r\n    * @param size the file size\r\n    * @returns a syntetic File object instance\r\n    */\r\n    static create_3gp = (size?: number): File => {\r\n        return SyntheticFile.createFile(\"3gp_video-file-with-large-name.3gp\", size ? size : 3516516, \"video/3gpp\");\r\n    }\r\n    /**\r\n    * \r\n    * @param size the file size\r\n    * @returns a syntetic File object instance\r\n    */\r\n    static create_3gp2 = (size?: number): File => {\r\n        return SyntheticFile.createFile(\"3gp2_video-file-with-large-name.3g2\", size ? size : 3516516, \"video/3gpp2\");\r\n    }\r\n    /**\r\n    * \r\n    * @param size the file size\r\n    * @returns a syntetic File object instance\r\n    */\r\n    static create_3gp_a = (size?: number): File => {\r\n        return SyntheticFile.createFile(\"3gp_audio-file-with-large-name.3gp\", size ? size : 3516516, \"audio/3gpp\");\r\n    }\r\n    /**\r\n    * \r\n    * @param size the file size\r\n    * @returns a syntetic File object instance\r\n    */\r\n    static create_3gp_v = (size?: number): File => {\r\n        return SyntheticFile.createFile(\"3gp_audio-file-with-large-name.3gp2\", size ? size : 3516516, \"audio/3gpp2\");\r\n    }\r\n    /**\r\n    * \r\n    * @param size the file size\r\n    * @returns a syntetic File object instance\r\n    */\r\n    static create_7z = (size?: number): File => {\r\n        return SyntheticFile.createFile(\"seven_zip-file-with-large-name.7z\", size ? size : 3516516, \"application/x-7z-compressed\");\r\n    }\r\n    /**\r\n    * \r\n    * @param size the file size\r\n    * @returns a syntetic File object instance\r\n    */\r\n    static create_python = (size?: number): File => {\r\n        return SyntheticFile.createFile(\"python-file-with-large-name.py\", size ? size : 3516516, \"text/plain\");\r\n    }\r\n    /**\r\n    * \r\n    * @param size the file size\r\n    * @returns a syntetic File object instance\r\n    */\r\n    static create_java = (size?: number): File => {\r\n        return SyntheticFile.createFile(\"java-file-with-large-name.java\", size ? size : 3516516, \"text/plain\");\r\n    }\r\n    /**\r\n    * \r\n    * @param size the file size\r\n    * @returns a syntetic File object instance\r\n    */\r\n    static create_react = (size?: number): File => {\r\n        return SyntheticFile.createFile(\"react_jsx-file-with-large-name.jsx\", size ? size : 3516516, \"text/plain\");\r\n    }\r\n    /**\r\n    * \r\n    * @param size the file size\r\n    * @returns a syntetic File object instance\r\n    */\r\n    static create_vue = (size?: number): File => {\r\n        return SyntheticFile.createFile(\"vue-file-with-large-name.vue\", size ? size : 3516516, \"text/plain\");\r\n    }\r\n    /**\r\n     * Creates an array of fake (synthetic) files\r\n     * @param size the file size for all synthetic files\r\n     * @returns an array of all file icon preview supported files\r\n     */\r\n    static createFileListMiscelanious = (size?: number): File[] => {\r\n\r\n        let listFile: File[] = [];\r\n\r\n        listFile.push(SyntheticFile.create_aac(size));\r\n        listFile.push(SyntheticFile.create_abw(size));\r\n        listFile.push(SyntheticFile.create_freearc(size));\r\n        listFile.push(SyntheticFile.create_avi(size));\r\n        listFile.push(SyntheticFile.create_azw(size));\r\n        listFile.push(SyntheticFile.create_octet(size));\r\n        listFile.push(SyntheticFile.create_bmp(size));\r\n        listFile.push(SyntheticFile.create_bz(size));\r\n        listFile.push(SyntheticFile.create_bz2(size));\r\n        listFile.push(SyntheticFile.create_cda(size));\r\n        listFile.push(SyntheticFile.create_csh(size));\r\n        listFile.push(SyntheticFile.create_css(size));\r\n        listFile.push(SyntheticFile.create_csv(size));\r\n        listFile.push(SyntheticFile.create_doc(size));\r\n        listFile.push(SyntheticFile.create_docx(size));\r\n        listFile.push(SyntheticFile.create_eot(size));\r\n        listFile.push(SyntheticFile.create_epub(size));\r\n        listFile.push(SyntheticFile.create_gzip(size));\r\n        listFile.push(SyntheticFile.create_gif(size));\r\n        listFile.push(SyntheticFile.create_htm(size));\r\n        listFile.push(SyntheticFile.create_html(size));\r\n        listFile.push(SyntheticFile.create_ico(size));\r\n        listFile.push(SyntheticFile.create_icalendar(size));\r\n        listFile.push(SyntheticFile.create_jar(size));\r\n        listFile.push(SyntheticFile.create_jpeg(size));\r\n        listFile.push(SyntheticFile.create_jpg(size));\r\n        listFile.push(SyntheticFile.create_js(size));\r\n        listFile.push(SyntheticFile.create_json(size));\r\n        listFile.push(SyntheticFile.create_jsonld(size));\r\n        listFile.push(SyntheticFile.create_mid(size));\r\n        listFile.push(SyntheticFile.create_midi(size));\r\n        listFile.push(SyntheticFile.create_x_mid(size));\r\n        listFile.push(SyntheticFile.create_x_midi(size));\r\n        listFile.push(SyntheticFile.create_mjs(size));\r\n        listFile.push(SyntheticFile.create_mp3(size));\r\n        listFile.push(SyntheticFile.create_mp4(size));\r\n        listFile.push(SyntheticFile.create_mpeg(size));\r\n        listFile.push(SyntheticFile.create_mpkg(size));\r\n        listFile.push(SyntheticFile.create_odp(size));\r\n        listFile.push(SyntheticFile.create_ods(size));\r\n        listFile.push(SyntheticFile.create_odt(size));\r\n        listFile.push(SyntheticFile.create_oga(size));\r\n        listFile.push(SyntheticFile.create_ogv(size));\r\n        listFile.push(SyntheticFile.create_ogx(size));\r\n        listFile.push(SyntheticFile.create_opus(size));\r\n        listFile.push(SyntheticFile.create_otf(size));\r\n        listFile.push(SyntheticFile.create_png(size));\r\n        listFile.push(SyntheticFile.create_pdf(size));\r\n        listFile.push(SyntheticFile.create_php(size));\r\n        listFile.push(SyntheticFile.create_ppt(size));\r\n        listFile.push(SyntheticFile.create_pptx(size));\r\n        listFile.push(SyntheticFile.create_rar(size));\r\n        listFile.push(SyntheticFile.create_rtf(size));\r\n        listFile.push(SyntheticFile.create_sh(size));\r\n        listFile.push(SyntheticFile.create_svg(size));\r\n        listFile.push(SyntheticFile.create_swf(size));\r\n        listFile.push(SyntheticFile.create_tar(size));\r\n        listFile.push(SyntheticFile.create_tif(size));\r\n        listFile.push(SyntheticFile.create_tiff(size));\r\n        listFile.push(SyntheticFile.create_ts(size));\r\n        listFile.push(SyntheticFile.create_ttf(size));\r\n        listFile.push(SyntheticFile.create_text(size));\r\n        listFile.push(SyntheticFile.create_typescript(size));\r\n        listFile.push(SyntheticFile.create_vsd(size));\r\n        listFile.push(SyntheticFile.create_wav(size));\r\n        listFile.push(SyntheticFile.create_weba(size));\r\n        listFile.push(SyntheticFile.create_webm(size));\r\n        listFile.push(SyntheticFile.create_webp(size));\r\n        listFile.push(SyntheticFile.create_woff(size));\r\n        listFile.push(SyntheticFile.create_woff2(size));\r\n        listFile.push(SyntheticFile.create_xhtml(size));\r\n        listFile.push(SyntheticFile.create_xlsx(size));\r\n        listFile.push(SyntheticFile.create_xls(size));\r\n        listFile.push(SyntheticFile.create_xml(size));\r\n        listFile.push(SyntheticFile.create_xml_txt(size));\r\n        listFile.push(SyntheticFile.create_xul(size));\r\n        listFile.push(SyntheticFile.create_zip(size));\r\n        //listFile.push(SyntheticFile.create_3gp(size));\r\n        //listFile.push(SyntheticFile.create_3gp2(size));\r\n        //listFile.push(SyntheticFile.create_3gp_a(size));\r\n        //listFile.push(SyntheticFile.create_3gp_v(size));\r\n        //listFile.push(SyntheticFile.create_7z(size));\r\n        listFile.push(SyntheticFile.create_python(size));\r\n        listFile.push(SyntheticFile.create_java(size));\r\n        listFile.push(SyntheticFile.create_react(size));\r\n        listFile.push(SyntheticFile.create_vue(size));\r\n\r\n        return listFile;\r\n    }\r\n}\r\n///////////////////// SHORTCUTS\r\n/**\r\n * Create a list of synthetic files with different mime types\r\n * @param size the file size for each synthetic file\r\n * @returns a list of synthetic file\r\n */\r\nexport const createListOfMultiTypeFile = (size?: number): File[] => {\r\n    return SyntheticFile.createFileListMiscelanious(size);\r\n}\r\n\r\n/**\r\n * Creates a synthetic file.\r\n * By default, creates a png image file\r\n * @param name the file name to show. By default is set to \"png-image-file-with-large-name.png\"\r\n * @param size the size in bytes of the file. By default this value is set to 455555\r\n * @param type the mime type of the file. By default is set to \"image/png\"\r\n * @returns \r\n */\r\nexport const createSyntheticFile = (\r\n    name = \"png-image-file-with-large-name.png\",\r\n    size = 455555,\r\n    type = \"image/png\",\r\n): File => {\r\n    return SyntheticFile.createFile(name, size, type);\r\n}","/**\r\n * An id generator for FileItems\r\n */\r\n export abstract class FileIdGenerator {\r\n    static nextId = 0;\r\n    /**\r\n     * Increases the id counter and returns the next id available.\r\n     * @returns the next integer id available\r\n     */\r\n    static getNextId(): number {\r\n        FileIdGenerator.nextId++;\r\n        return FileIdGenerator.nextId;\r\n    }\r\n}","import { ExtFile, ExtFileInstance } from \"../types\";\r\nimport { FileIdGenerator } from \"./IdGenerator\";\r\n\r\n\r\n/**\r\n * Converts the fileList into an array of separated ExtFile objects\r\n * @param fileList the FileList object given by input(event.target.files) or drop operation (event.dataTransfer)\r\n * @returns an array of ExtFile objects\r\n */\r\nexport const fileListToExtFileArray = (fileList: FileList): ExtFile[] => {\r\n    let extFileArray: ExtFile[] = [];\r\n    for (let i = 0, f: File; (f = fileList[i]); i++) {\r\n        extFileArray.push({ id: FileIdGenerator.getNextId(), file: f, name: f.name, size: f.size, type: f.type });\r\n    }\r\n    return extFileArray;\r\n};\r\n\r\n/**\r\n * Converts the fileList into an array of separated ExtFile instances\r\n * @param fileList the FileList object given by input (event.target.files) or drop operation (event.dataTransfer)\r\n * @returns an array of ExtFile instances\r\n */\r\nexport const fileListToExtFileInstanceArray = (fileList: FileList): ExtFileInstance[] => {\r\n    let extFileArray: ExtFileInstance[] = [];\r\n    for (let i = 0, f: File; (f = fileList[i]); i++) {\r\n        extFileArray.push(new ExtFileInstance({ id: FileIdGenerator.getNextId(), file: f, name: f.name, size: f.size, type: f.type  }));\r\n    }\r\n    return extFileArray;\r\n};","export const isValidateActive = (\r\n    accept: string | undefined,\r\n    maxFileSize: number | undefined,\r\n    maxFiles: number | undefined,\r\n    validator: Function | undefined\r\n  ): boolean => {\r\n    return (\r\n      (accept !== undefined && accept !== null) ||\r\n      (maxFileSize !== undefined && maxFileSize !== null) ||\r\n      (maxFiles !== undefined && maxFiles !== null) ||\r\n      (validator !== undefined && validator !== null)\r\n    );\r\n  };\r\n  ","/**\r\n * The max size of the word in characters\r\n */\r\nexport const DEFAULT_MAX_SIZE_WORD = 30;\r\n/**\r\n * \r\n * @param word the word to be shrinked\r\n * @returns the shrinked word\r\n */\r\nexport const shrinkWord = (word = \"\", card = false): string => {\r\n    let newWord = word;\r\n    if (card) {\r\n        if (word.length >= 20) {\r\n            newWord = word.slice(0, 10) + \"...\" + word.slice(-7);\r\n        }\r\n    } else if (word.length >= DEFAULT_MAX_SIZE_WORD) {\r\n        newWord = word.slice(0, 13) + \"...\" + word.slice(-8);\r\n    }\r\n    return newWord;\r\n};","\r\nimport { DropzoneLocalizerSelector } from \"../localization\";\r\nimport { ExtFile, ExtFileInstance, UploadResponse } from \"../types\";\r\n\r\n/**\r\n * Updates a extFile and sets its uploadStatus to \"uploading\"\r\n * @param extFile the extended file object\r\n * @returns the extended file with the uploadStatus attribute modified\r\n */\r\nexport const setPrepToUploading = (\r\n    extFile: ExtFile\r\n): Promise<ExtFile> => {\r\n    //console.log(\"prepToUpload One\", extFile);\r\n    return new Promise((resolve, reject) => {\r\n        setTimeout(() => {\r\n            resolve({\r\n                ...extFile,\r\n                uploadStatus: \"uploading\",\r\n            });\r\n        }, 1500);\r\n\r\n    });\r\n};\r\n/**\r\n * Updates a extFile and sets its uploadStatus to \"success\"\r\n * @param extFile the extended file object\r\n * @returns the extended file with the uploadStatus attribute modified\r\n */\r\nexport const uploadOne = (\r\n    extFile: ExtFile\r\n): Promise<ExtFile> => {\r\n    //console.log(\"upload One\", extFile);\r\n    return new Promise((resolve, reject) => {\r\n        setTimeout(() => {\r\n            resolve({\r\n                ...extFile,\r\n                uploadStatus: \"success\",\r\n            });\r\n        }, 2000);\r\n    });\r\n};\r\n/**\r\n * Awaits the given time before start uploading\r\n * @param preparingTime the time in miliseconds, by default it will wait 1.5 secs\r\n * @returns an empty object\r\n */\r\nexport const sleepPreparing = (\r\n    preparingTime: number = 5000\r\n): Promise<void> => {\r\n    //console.log(\"uploadfiles preparingTime One\", preparingTime);\r\n    return new Promise((resolve, reject) => {\r\n\r\n        setTimeout(() => {\r\n            resolve();\r\n        }, preparingTime);\r\n\r\n    });\r\n}\r\n\r\n/**\r\n * \r\n * @param extFileInstance \r\n * @returns \r\n */\r\nexport const prepToUploadOne = (\r\n    extFileInstance: ExtFileInstance | ExtFile\r\n): Promise<ExtFileInstance | ExtFile> => {\r\n    //console.log(\"prepToUpload One\", extFileInstance);\r\n    return new Promise((resolve, reject) => {\r\n        setTimeout(() => {\r\n            extFileInstance.uploadStatus = \"uploading\";\r\n            resolve({\r\n                ...extFileInstance,\r\n                uploadStatus: \"uploading\",\r\n            });\r\n        }, 1500);\r\n\r\n    });\r\n};\r\n\r\n/**\r\n * \r\n * @param extFileInstance \r\n * @returns \r\n */\r\nexport const uploadOneExtFile = (\r\n    extFileInstance: ExtFileInstance\r\n): Promise<Object> => {\r\n    //console.log(\"upload One\", extFileInstance);\r\n    return new Promise((resolve, reject) => {\r\n        setTimeout(() => {\r\n            extFileInstance.uploadStatus = \"success\";\r\n            resolve({\r\n                ...extFileInstance,\r\n                uploadStatus: \"success\",\r\n            });\r\n        }, 2000);\r\n    });\r\n};\r\n\r\n\r\n/**\r\n * \r\n * @param extFile the extFile to upload \r\n * @param DropzoneLocalizer the localization\r\n * @returns a duiUploadResponse object that describes the result\r\n */\r\nexport const fakeFuiUpload = (\r\n    extFileInstance: ExtFileInstance,\r\n    DropzoneLocalizer = DropzoneLocalizerSelector(\"EN-en\")\r\n): Promise<ExtFile> => {\r\n    \r\n    const extFile:ExtFile = extFileInstance.toExtFile();\r\n    \r\n    return new Promise((resolve, reject) => {\r\n        setTimeout(() => {\r\n            const randomNumber: number = Math.floor(Math.random() * 10);\r\n            if (randomNumber % 2 === 0) {\r\n                const success = true;\r\n                const message = DropzoneLocalizer.fakeuploadsuccess as string;\r\n                const payload = { url: \"\" };\r\n                resolve({\r\n                    ...extFile,\r\n                    serverResponse: { success, message, payload },\r\n                    uploadStatus: \"success\",\r\n                    uploadMessage: message,\r\n\r\n                });\r\n            } else {\r\n                const success = false;\r\n                const message = DropzoneLocalizer.fakeUploadError as string;\r\n                const payload = {};\r\n                resolve({\r\n                    ...extFile,\r\n                    serverResponse: { success, message, payload },\r\n                    uploadStatus: \"error\",\r\n                    uploadMessage: message,\r\n                });\r\n            }\r\n        }, 1700);\r\n    });\r\n};\r\n\r\n\r\n/**\r\n * \r\n * @param extFile the extFile to upload \r\n * @param DropzoneLocalizer the localization\r\n * @returns a duiUploadResponse object that describes the result\r\n */\r\nexport const fakeFuiUploadExtFile = (\r\n    extFileInstance: ExtFileInstance,\r\n    DropzoneLocalizer = DropzoneLocalizerSelector(\"EN-en\")\r\n): Promise<UploadResponse> => {\r\n    \r\n    const extFile:ExtFile = extFileInstance.toExtFile();\r\n    \r\n    return new Promise((resolve, reject) => {\r\n        setTimeout(() => {\r\n            const randomNumber: number = Math.floor(Math.random() * 10);\r\n            if (randomNumber % 2 === 0) {\r\n                const status = true;\r\n                const message = DropzoneLocalizer.fakeuploadsuccess as string;\r\n                const payload = { url: \"\" };\r\n\r\n                resolve({\r\n                    id: extFile.id,\r\n                    serverResponse: { status, message, payload },\r\n                    uploadedFile: {\r\n                        ...extFile,\r\n                        uploadStatus: \"success\",\r\n                        uploadMessage: message,\r\n                        progress: 100\r\n                    }\r\n\r\n                });\r\n            } else {\r\n                const status = false;\r\n                const message = DropzoneLocalizer.fakeUploadError as string;\r\n                const payload = {};\r\n                resolve({\r\n                    id: extFile.id,\r\n                    serverResponse: { status, message, payload },\r\n                    uploadedFile: {\r\n                        ...extFile,\r\n                        uploadStatus: \"error\",\r\n                        uploadMessage: message,\r\n                        progress: 60\r\n                    },\r\n                });\r\n            }\r\n        }, 1700);\r\n    });\r\n};\r\n","/**\r\n * Random integer between min (included) and max (excluded)\r\n * @param min the min number\r\n * @param max the max number\r\n * @returns a random number between min (included) and max (excluded)\r\n */\r\nexport function getRandomInt(min: number = 0, max: number = 0): number {\r\n    return Math.floor(Math.random() * (max - min)) + min;\r\n}\r\n","/**\r\n * Cleans the input.value attribute\r\n * @param inputElement \r\n */\r\nexport const cleanInput = (inputElement?: HTMLInputElement | null) => {\r\n    if (!inputElement) return;\r\n    inputElement.value = \"\";\r\n}","/**\r\n * If className is given, adds class name in string format to a base class name\r\n * @param baseClassName the base class name\r\n * @param className the class name to be added\r\n * @returns a new class name obtained by adding the second paramater\r\n */\r\nexport const addClassName = (\r\n    baseClassName: string,\r\n    className: string | undefined\r\n): string => {\r\n    if (className)\r\n        return `${baseClassName} ${className}`;\r\n    return baseClassName;\r\n}","import { ExtFile } from \"../types\";\r\n\r\nexport const isUploadAbleExtFile = (extFile: ExtFile, validateFilesFlag: boolean) => {\r\n    return (!validateFilesFlag || (validateFilesFlag && extFile.valid)) && extFile.uploadStatus !== \"success\";\r\n}","/**\r\n * \r\n * @param file \r\n * @param name \r\n * @param type \r\n * @param size \r\n * @returns the file name, type and size\r\n */\r\nexport const getLocalFileItemData = (\r\n    file: File | undefined,\r\n    name: string | undefined,\r\n    type: string | undefined,\r\n    size: number | undefined\r\n): [string, string | undefined, number | undefined] => {\r\n\r\n    let localFileName: string = \"\";\r\n    let localFileType: string | undefined = undefined;\r\n    let localFileSize: number | undefined = undefined;\r\n\r\n    // if file object is valid, obtain metadata from it\r\n    // otherwise try to get file data from individual props in string format\r\n    if (file && typeof file.name === \"string\") {\r\n        localFileName = file.name;\r\n        localFileType = file.type;\r\n        localFileSize = file.size;\r\n    } else if (name && typeof name === \"string\") {\r\n        localFileName = name;\r\n        localFileType = type;\r\n        localFileSize = size;\r\n    }\r\n    return [localFileName, localFileType, localFileSize]\r\n}","/**\r\n * Separate the accept string array into an array of strings separated by commas\r\n * @param accept the string accept array\r\n * @returns an array of strings in wich every item\r\n */\r\nexport const separateAccept = (accept: string | undefined): string[] => {\r\n    if (!accept || accept.length === 0) {\r\n        return [];\r\n    }\r\n    const commaSeparatedAccpet: string[] = accept.split(\",\").map((acceptItem) => acceptItem.trim());\r\n    return commaSeparatedAccpet;\r\n}","import { getExt } from \"../utils/getExt\";\r\n\r\n/**\r\n * Checks whether a file is valid or not given an array of file extentions and mime types\r\n * e.g. accept =  [\".doc\", \".docx\", \".xml\", \"application/msword\", \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\"]\r\n * @param accept the array of strings accept items\r\n * @param file a File object to be evaluated\r\n * @returns true if the mime type file is included in the accept param\r\n */\r\n export const validateAccept = (accept: string[], file: File): boolean => {\r\n    let valid: boolean = false;\r\n    const { name, type } = file;\r\n    //Array(5) [ \".doc\", \".docx\", \".xml\", \"application/msword\", \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\" ]\r\n    for (let i = 0; i < accept.length; i++) {\r\n        const acceptItem: string = accept[i];\r\n        //check is not empty\r\n        if (acceptItem.length !== 0) {\r\n            //check extention\r\n            if (acceptItem.charAt(0) === \".\") {\r\n                if (acceptItem.includes(getExt(name))) {\r\n                    return true;\r\n                }\r\n            }\r\n            //check mime\r\n            // header/tail  => image/png  ;  image/* ; audio\r\n            if (type && type.length > 0 && acceptItem.includes(\"/\") && type.includes(\"/\")) {\r\n                let headerMime = acceptItem.split(\"/\")[0];\r\n                let tailMime = acceptItem.split(\"/\")[1];\r\n\r\n                let headerMimeFile = type.split(\"/\")[0];\r\n                let tailMimeFile = type.split(\"/\")[1];\r\n\r\n                if (headerMime === headerMimeFile) {\r\n                    //    image/*\r\n                    if (tailMime === \"*\") {\r\n                        return true;\r\n                    } else if (tailMime === tailMimeFile) {\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return valid;\r\n}","import { ValidateErrorLocalizerSelector } from \"../localization\";\r\nimport { ExtFile, FunctionLabel, Localization, LocalLabels } from \"../types\";\r\nimport { ValidateFileResponse, FileValidatorProps } from \"../types/validation\";\r\nimport { FileIdGenerator } from \"../utils/IdGenerator\";\r\nimport { separateAccept } from \"./separateAccept\";\r\nimport { validateAccept } from \"./validateAccept\";\r\n\r\n/**\r\n * \r\n * @param preValidatedFiles FileList \r\n * @param remainingValids The number of remaining valid files\r\n * @param localValidator \r\n * @param validator \r\n * @param maxFiles \r\n * @param localization \r\n * @returns \r\n */\r\nexport const fileListvalidator = (\r\n    preValidatedFiles: FileList,\r\n    remainingValids: number,\r\n    localValidator: FileValidatorProps,\r\n    validator?: ((f: File) => ValidateFileResponse) ,\r\n    maxFiles?: number,\r\n    localization?: Localization\r\n): ExtFile[] => {\r\n    const output: ExtFile[] = [];\r\n    //set a countdown when there is a limit on files\r\n    let countdown: number = remainingValids;\r\n    // get localized labels\r\n    const ValidationErrorLocalizer: LocalLabels =\r\n        ValidateErrorLocalizerSelector(localization);\r\n    //Iterate the File list\r\n    for (let i = 0, f: File; (f = preValidatedFiles[i]); i++) {\r\n        // Validate the file list with\r\n        let validatedFile: ExtFile = validateFile(f, validator, localValidator, ValidationErrorLocalizer);\r\n        if (validatedFile.valid) {\r\n            //not valid due to file count limit\r\n            const valid = countdown > 0;\r\n            validatedFile.valid = valid;\r\n            //add error about amount\r\n            if (!valid) {\r\n                const maxFileErrorMessenger: FunctionLabel = ValidationErrorLocalizer.maxFileCount as FunctionLabel;\r\n                validatedFile.errors = validatedFile.errors\r\n                    ? [...validatedFile.errors, maxFileErrorMessenger(maxFiles || Infinity)]\r\n                    : [maxFileErrorMessenger(maxFiles || Infinity)];\r\n            }\r\n            countdown--;\r\n        }\r\n        output.push(validatedFile);\r\n    }\r\n    return output;\r\n};\r\n\r\n\r\n/**\r\n * For each ExtFile sets the valid prop of ExtFile to \"true\" or \"false\"\r\n * depending on the result of the individual validation. \r\n * It also add the list of errors.\r\n * @param extFileList \r\n * @param remainingValids \r\n * @param localValidatorProps \r\n * @param validator \r\n * @param maxFiles \r\n * @param localization \r\n * @returns a new ExtFile list with each item validated\r\n */\r\nexport const validateExtFileList = (\r\n    extFileList: ExtFile[],\r\n    remainingValids: number,\r\n    localValidatorProps: FileValidatorProps,\r\n    validator?: ((f: File) => ValidateFileResponse) ,\r\n    maxFiles?: number,\r\n    localization?: Localization\r\n): ExtFile[] => {\r\n    //console.log(\"remaning valids\", remainingValids);\r\n    let fileListResult: ExtFile[] = [];\r\n    if (!remainingValids) return fileListResult;\r\n    let remaining: number = remainingValids;\r\n    const ValidationErrorLocalizer: LocalLabels =\r\n        ValidateErrorLocalizerSelector(localization);\r\n    const maxFileErrorMessenger: FunctionLabel = ValidationErrorLocalizer.maxFileCount as FunctionLabel;\r\n    for (let i = 0; i < extFileList.length; i++) {\r\n        let currentExtFile: ExtFile = extFileList[i];\r\n\r\n        currentExtFile = validateExtFile(currentExtFile, validator, localValidatorProps, ValidationErrorLocalizer);\r\n        //console.log(\"validateExtFileList after validation\", currentExtFile);\r\n\r\n        if (currentExtFile.valid) {\r\n            //not valid due to file count limit\r\n            const valid = remaining > 0;\r\n            currentExtFile.valid = valid;\r\n            //add error about amount\r\n            if (!valid) {\r\n                currentExtFile.errors = currentExtFile.errors\r\n                    ? [...currentExtFile.errors, maxFileErrorMessenger(maxFiles || Infinity)]\r\n                    : [maxFileErrorMessenger(maxFiles || Infinity)];\r\n            }\r\n            remaining--;\r\n        }\r\n        fileListResult.push(currentExtFile);\r\n\r\n    }\r\n    return fileListResult;\r\n}\r\n\r\n/**\r\n * \r\n * @param extFile \r\n * @param validator \r\n * @param validatorProps \r\n * @param localErrors \r\n * @returns \r\n */\r\nexport const validateExtFile = (\r\n    extFile: ExtFile,\r\n    validator: ((f: File) => ValidateFileResponse) | undefined,\r\n    validatorProps: FileValidatorProps,\r\n    localErrors: LocalLabels\r\n): ExtFile => {\r\n    let extFileResult: ExtFile = { ...extFile };\r\n    let errors: string[] = [];\r\n    //TO-DO: Add extra validation for individual props even if FIle object was not given\r\n    if (!extFile.file) {\r\n        return { ...extFileResult }\r\n    }\r\n\r\n    //TO-DO: add \"overrideValidation\" prop to ignore the rest of validators like accept and maxFileSize\r\n    if (validator) {\r\n        const resultCustomValidation: ValidateFileResponse = validator(extFileResult.file as File);\r\n        const { errors: errorsResult } = resultCustomValidation;\r\n        if (errorsResult)\r\n            errors.push(...errorsResult)\r\n        //return { ...extFileResult, ...validator(extFileResult.file as File) };\r\n    }\r\n\r\n    const { maxFileSize, accept } = validatorProps;\r\n    //console.log(\"Validation\", maxFileSize, accept);\r\n    //check file size\r\n    const file: File = extFile.file;\r\n\r\n\r\n    if (maxFileSize && file.size > maxFileSize) {\r\n        const maxFileSizeErrorMessenger: FunctionLabel = localErrors.maxSizeError as FunctionLabel;\r\n\r\n        //console.log(\"Size error\", maxFileSizeErrorMessenger(maxFileSize));\r\n\r\n        errors.push(maxFileSizeErrorMessenger(maxFileSize));\r\n    }\r\n    //check file type\r\n    if (accept && !validateAccept(separateAccept(accept), file)) {\r\n        errors.push(localErrors.acceptError as string);\r\n    }\r\n    const isValid: boolean = errors.length === 0;\r\n    extFileResult = { ...extFileResult, valid: isValid, errors: !isValid ? errors : undefined };\r\n    //console.log(\"validation extFileResult\", extFileResult);\r\n    return extFileResult;\r\n\r\n}\r\n\r\n\r\n\r\n/**\r\n * Function that validate whether a file is valid, or not\r\n * according to the Filevalidator properties\r\n * @param file a File object to be evaluated\r\n * @param validatorProps the validator object \r\n * @returns a FileValidated object\r\n */\r\nexport const validateFile = (\r\n    file: File,\r\n    validator: undefined | ((f: File) => ValidateFileResponse),\r\n    validatorProps: FileValidatorProps,\r\n    localErrors: LocalLabels\r\n): ExtFile => {\r\n\r\n    const idGenerated = FileIdGenerator.getNextId();\r\n    let errors: string[] = [];\r\n    if (validator) {\r\n        return { id: idGenerated, file, ...validator(file) };\r\n    }\r\n\r\n    const { maxFileSize, accept } = validatorProps;\r\n\r\n    //check file size\r\n    if (maxFileSize && file.size > maxFileSize) {\r\n        const maxFileSizeErrorMessenger: FunctionLabel = localErrors.maxSizeError as FunctionLabel;\r\n        errors.push(maxFileSizeErrorMessenger(maxFileSize));\r\n    }\r\n\r\n    //check file type\r\n    // const allowedTypes = accept.filter((type) => (file.type === type))\r\n    if (accept && !validateAccept(separateAccept(accept), file)) {\r\n        errors.push(localErrors.acceptError as string);\r\n    }\r\n\r\n\r\n    const fileResult: ExtFile = {\r\n        id: idGenerated,\r\n        file: file,\r\n        valid: errors.length === 0,\r\n        errors: errors\r\n    };\r\n    // logic here\r\n    return fileResult;\r\n};","import { UPLOADSTATUS } from \"../types\";\r\nimport { getRandomInt } from \"../utils/randomInt\";\r\n\r\n/**\r\n * Generates a random number betwen 0 and 3\r\n * where\r\n * 0 => error\r\n * 1 => uploading\r\n * 2 => success\r\n * 3 => undefined\r\n * @returns a random upload status or undefined\r\n */\r\n export const getRandomUploadStatus = (): UPLOADSTATUS | undefined => {\r\n    const result: number = getRandomInt(0, 4);\r\n    switch (result) {\r\n        case 0: return \"error\";\r\n        case 1: return \"uploading\";\r\n        case 2: return \"success\";\r\n        default:\r\n            return undefined;\r\n    }\r\n}","/**\r\n * list of dumy errors in english\r\n */\r\nexport const listOfErrors: string[] =\r\n    [\r\n        \"File is too big. Max file size allowed is 80mb.\",\r\n        \"File's type is not allowed.\",\r\n        \"Max amount of files (28) has been reached.\"\r\n    ];","import { ExtFile, UPLOADSTATUS } from \"../types\";\r\nimport { FileIdGenerator, getRandomInt } from \"../utils\";\r\nimport { getRandomUploadStatus, listOfErrors } from \"../validation\";\r\n\r\n\r\n/**\r\n * Make a validated file that is ready to be used on FileItem component,\r\n * if valid is not set, a random operation will decide whether the file is valid or not\r\n * If valid is false, then the natural order is not to be uploadable and wont have upload message nor upload status\r\n * If valid is true, then file can be uploaded and can have upload message if the status is succes or error\r\n * @param file The file\r\n * @param valid true if it is a valid file, otherwise is false\r\n * @param uploadStatus the current upload status. If not given a random upload status will be set\r\n * @param uploadMessage the upload message after uploading\r\n * @returns a Vaidated File object\r\n */\r\n export const makeSyntheticExtFile = (\r\n    file?: File ,\r\n    valid = (Math.ceil(Math.random() * 28) % 2 === 0),\r\n    uploadStatus?: UPLOADSTATUS,\r\n    uploadMessage?: string\r\n): ExtFile => {\r\n    //if valid, naturally, can be uploaded\r\n    let errors: string[] | undefined = [];\r\n    let newUpoadStatus = uploadStatus || getRandomUploadStatus();\r\n\r\n    let customUploadMessage: string | undefined = uploadMessage || \"\";\r\n    if (valid) {\r\n        //we can decide according to upload status \r\n        if (!uploadMessage) {\r\n            switch (newUpoadStatus) {\r\n                case \"error\": customUploadMessage = \"Upload failed. There was an error\"; break;\r\n                case \"success\": customUploadMessage = \"File was successfully upload\"; break;\r\n                default: uploadMessage = undefined;\r\n            }\r\n        }\r\n        errors = undefined;\r\n    } else {\r\n        //if not valid, just show error messages\r\n        const randInt: number = getRandomInt(0, 3);\r\n        errors.push(listOfErrors[randInt]);\r\n        newUpoadStatus = undefined;\r\n        customUploadMessage = undefined;\r\n    }\r\n    //now make a File Validated instance \r\n    const newFileValidated: ExtFile = {\r\n        id: FileIdGenerator.getNextId(),\r\n        valid: valid,\r\n        file: file,\r\n        uploadStatus: newUpoadStatus,\r\n        uploadMessage: customUploadMessage,\r\n        errors: errors\r\n    };\r\n    return newFileValidated;\r\n}\r\n","import { createSyntheticFile } from \"../synthetic-file\"\r\nimport { ExtFile } from \"../types\"\r\nimport { FileIdGenerator } from \"../utils\"\r\nimport { listOfErrors } from \"../validation\"\r\n\r\nexport const extFileMock = (id?: number): ExtFile => {\r\n    return {\r\n        id: id || FileIdGenerator.getNextId(),\r\n        name: \"fileName.ext\",\r\n        size: 28 * 1024 * 1024,\r\n        type: \"files-ui/mock\",\r\n        file: createSyntheticFile(\"fileName.ext\", 28 * 1024 * 1024, \"files-ui/mock\"),\r\n        errors: listOfErrors,\r\n        uploadMessage: \"uploaded\",\r\n        uploadStatus: \"preparing\",\r\n        valid: false,\r\n        progress: 28,\r\n        xhr: new XMLHttpRequest(),\r\n        extraData: {\r\n            extraData1: \"files-ui is the best\",\r\n            extraData2: {\r\n                id: 1,\r\n                name: \"files-ui.mock\"\r\n            },\r\n            deleted: true\r\n        },\r\n        downloadUrl: \"https://www.files-ui.com/mock/file-download\",\r\n        uploadUrl: \"https://www.files-ui.com/mock/file\"\r\n    }\r\n}\r\n\r\n\r\nexport const extFileMockArray = (amount = 2): ExtFile[] => {\r\n    let arr = Array.from(Array(amount).keys());\r\n    const arrResult: ExtFile[] = [];\r\n    for (let i in arr) {\r\n        arrResult.push(extFileMock());\r\n    }\r\n    return arrResult;\r\n}","export default function addExtraData(\r\n    formData: FormData,\r\n    extraData: Record<string, string> | undefined\r\n) {\r\n    //headers\r\n    const extraDataKeys: string[] = Object.keys(extraData || {});\r\n    //const headerValues: string[] = Object.values(headers);\r\n    for (let i = 0; i < extraDataKeys.length && extraData; i++) {\r\n        //console.log(\"uploadFile extraData\", extraDataKeys[i], extraData[extraDataKeys[i]]);\r\n        formData.append(extraDataKeys[i], extraData[extraDataKeys[i]]);\r\n    }\r\n\r\n   // formData.append(\"otherValue\", \"HAAAAAAAAAAAAAAa\");\r\n\r\n}","export default function addHeaders(\r\n    xhr: XMLHttpRequest,\r\n    headers: Record<string, string> | undefined\r\n) {\r\n    //headers\r\n    const headerKeys: string[] = Object.keys(headers || {});\r\n    //const headerValues: string[] = Object.values(headers);\r\n    for (let i = 0; i < headerKeys.length && headers; i++) {\r\n        //console.log(\"uploadFile headers\", headerKeys[i], headers[headerKeys[i]]);\r\n        xhr.setRequestHeader(\r\n            headerKeys[i],\r\n            headers[headerKeys[i]]\r\n        );\r\n    }\r\n\r\n\r\n}","export const NO_URL_MESSAGE = \"Unable to upload. A valid url was not provided\";\r\n\r\nexport const NO_XHR_MESSAGE = \"Unable to upload. xhr object was not provided\";","import { ExtFile } from \"../types\";\r\nimport { NO_URL_MESSAGE, NO_XHR_MESSAGE } from \"../utils/constants\";\r\n\r\nexport const TIMEOUT_ERROR_RESPONSE = {\r\n    success: false,\r\n    message: \"Timeout error\",\r\n    payload: {}\r\n};\r\nexport const ABORTED_ERROR_RESPONSE = {\r\n    success: false,\r\n    message: \"Upload aborted\",\r\n    payload: {}\r\n}\r\nexport const JSON_PARSE_ERROR_RESPONSE = {\r\n    success: false,\r\n    message: \"Error when parsing JSON response\",\r\n    payload: {}\r\n}\r\n\r\nexport const UNEXPECTED_ERROR_RESPONSE = {\r\n    success: false,\r\n    message: \"Unexpected error\",\r\n    payload: {}\r\n}\r\n\r\nexport const NO_XHR_PROVIDED_ERROR = (extFile: ExtFile): ExtFile => {\r\n    return {\r\n        ...extFile,\r\n        uploadMessage: NO_XHR_MESSAGE,\r\n        uploadStatus: \"error\",\r\n        serverResponse: { success: false, }\r\n    }\r\n}\r\n\r\n\r\nexport const NO_URL_PROVIDED_ERROR = (extFile: ExtFile): ExtFile => {\r\n    return {\r\n        ...extFile,\r\n        uploadMessage: NO_URL_MESSAGE ,\r\n        uploadStatus: \"error\",\r\n        serverResponse: { success: false, }\r\n    }\r\n}","import { ExtFile, ServerResponse } from \"../types\";\r\nimport { JSON_PARSE_ERROR_RESPONSE } from \"./errors.upload\";\r\n\r\nexport const makeServerResponse = (success: any, message: string, payload: any): ServerResponse => {\r\n    const result: ServerResponse = { success: success, message: message, payload: payload } as ServerResponse;\r\n    return result;\r\n}\r\nexport const JsonParseResponse = (xhr: XMLHttpRequest): ServerResponse => {\r\n    try {\r\n        const jsonResponse = JSON.parse(xhr.response);\r\n\r\n        const success: boolean = (xhr.status >= 200 && xhr.status < 300) ? true : typeof jsonResponse.success === \"boolean\" ? jsonResponse.success : false;\r\n        const message: string = typeof jsonResponse.message === \"string\" ? jsonResponse.message :\r\n            success ?\r\n                \"Upload compete!. No message from server found.\"\r\n                : \"Error on upload. No message from server found.\"\r\n            ;\r\n        const payload: Object = jsonResponse.payload || jsonResponse || {};\r\n\r\n        const fuiResponse: ServerResponse = {\r\n            success: success,\r\n            message: message,\r\n            payload: payload\r\n        }\r\n        return fuiResponse\r\n    } catch (error) {\r\n        //console.log(\"FuiUpload ERROR\", error);\r\n        return JSON_PARSE_ERROR_RESPONSE;\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const makeSuccessUploadResponse = (\r\n    extFile: ExtFile,\r\n    responseFui: ServerResponse\r\n): ExtFile => {\r\n    return {\r\n        ...extFile,\r\n        serverResponse: responseFui,\r\n        uploadMessage: responseFui.message,\r\n        uploadStatus: \"success\"\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const makeErrorUploadResponse = (\r\n    extFile: ExtFile,\r\n    responseFui: ServerResponse\r\n): ExtFile => {\r\n    //console.log(\"makeErrorUploadResponse\", extFile, responseFui);\r\n    return {\r\n        ...extFile,\r\n        uploadMessage: responseFui.message,\r\n        uploadStatus: \"error\",\r\n        serverResponse: responseFui,\r\n    }\r\n}\r\n\r\n","import { ExtFile, Method } from \"../types\";\r\nimport { ServerResponse } from \"../types/uploadTypes\";\r\nimport addExtraDataUpload from \"./addExtraData.upload\";\r\nimport addHeaders from \"./addheaders.upload\";\r\nimport { ABORTED_ERROR_RESPONSE, NO_URL_PROVIDED_ERROR, NO_XHR_PROVIDED_ERROR, TIMEOUT_ERROR_RESPONSE, UNEXPECTED_ERROR_RESPONSE } from \"./errors.upload\";\r\nimport { JsonParseResponse, makeErrorUploadResponse, makeSuccessUploadResponse } from \"./response.upload\";\r\n\r\n\r\n\r\n/**\r\n * Uploads one formData object to a given endpoint in a promisified way\r\n * @param xhr XMLHTTPrequest object\r\n * @param method method for uploading\r\n * @param endpoint endpoint to upload the file\r\n * @param data FromData object to perform multipart form data upload\r\n * @param headers the set of headers\r\n * @returns a server response that consists on {status, payload, message}\r\n */\r\nexport const uploadBlob = (\r\n    xhr: XMLHttpRequest,\r\n    method: Method | undefined = \"POST\",\r\n    endpoint: string,\r\n    data: File,\r\n    headers: Record<string, string> | undefined\r\n) => {\r\n    return new Promise<ServerResponse>((resolve, reject) => {\r\n        //console.log(\"Fui_uploadFormData uploadFile\", xhr, method, endpoint, data, headers);\r\n        console.log(\"uploadBlob => BLOB\");\r\n        const finalMethod: Method = [\"POST\", \"PUT\", \"PATCH\"].includes(method.toUpperCase()) ? method : \"POST\";\r\n\r\n\r\n        xhr.upload.onload = () => {\r\n            //console.log(\"Fui_uploadFormData uploadFile onLoad\", xhr.readyState, xhr.response);\r\n        };\r\n        xhr.upload.ontimeout = () => resolve(TIMEOUT_ERROR_RESPONSE);\r\n        xhr.upload.onabort = () => {\r\n            //console.log(\"Fui_uploadFormData ABORTEEEEDDDD\");\r\n            resolve(ABORTED_ERROR_RESPONSE);\r\n        };\r\n        xhr.onloadend = async (e) => {\r\n            //console.log(\"onloadend loaded\", e.loaded);\r\n            //console.log(\"onloadend total\", e.total);\r\n            //console.log(\"onloadend lengthComputable\", e.lengthComputable);\r\n\r\n        }\r\n        // listen for `progress` event\r\n        //currently listening on FileItem component hook\r\n        xhr.onreadystatechange = async (e) => {\r\n            //console.log(\"Finished\", xhr);\r\n\r\n            //console.log(\"Fui_uploadFormData uploadFile onreadystatechange e.type\", e.type);\r\n            //console.log(\"Fui_uploadFormData uploadFile onreadystatechange\", xhr.readyState, xhr.response);\r\n\r\n            //lastLastState = lastState;\r\n            //lastState = xhr.readyState;\r\n\r\n            if (xhr.readyState === 4) {\r\n                if (xhr.response !== \"\") {\r\n                    //there is th answer\r\n                    resolve(JsonParseResponse(xhr));\r\n                } else {\r\n                    //error unexpected\r\n                    resolve(ABORTED_ERROR_RESPONSE);\r\n\r\n                }\r\n            } //else {\r\n                //console.log(\"Fui_uploadFormData FuiUpload NOT YET\" + xhr.readyState);\r\n            //}\r\n        };\r\n        // open request\r\n        xhr.open(finalMethod, endpoint, true);\r\n\r\n        //add header to request\r\n        addHeaders(xhr, headers);\r\n        //start uploading\r\n        //const blob:Blob = new Blob(data., { type: \"text/plain\" });\r\n        xhr.send(data);\r\n    });\r\n\r\n};\r\n\r\n\r\n\r\n/**\r\n * Uploads one formData object to a given endpoint in a promisified way\r\n * @param xhr XMLHTTPrequest object\r\n * @param method method for uploading\r\n * @param endpoint endpoint to upload the file\r\n * @param data FromData object to perform multipart form data upload\r\n * @param headers the set of headers\r\n * @returns a server response that consists on {status, payload, message}\r\n */\r\nexport const uploadFormData = (\r\n    xhr: XMLHttpRequest,\r\n    method: Method | undefined = \"POST\",\r\n    endpoint: string,\r\n    data: FormData,\r\n    headers: Record<string, string> | undefined\r\n) => {\r\n    return new Promise<ServerResponse>((resolve, reject) => {\r\n        //console.log(\"Fui_uploadFormData uploadFile\", xhr, method, endpoint, data, headers);\r\n\r\n        const finalMethod: Method = [\"POST\", \"PUT\", \"PATCH\"].includes(method.toUpperCase()) ? method : \"POST\";\r\n\r\n        /*   let lastLastState: number = -1;\r\n          let lastState: number = 0;\r\n          let jumped: boolean = false; */\r\n\r\n        xhr.upload.onload = () => {\r\n            //console.log(\"Fui_uploadFormData uploadFile onLoad\", xhr.readyState, xhr.response);\r\n        };\r\n        xhr.upload.ontimeout = () => resolve(TIMEOUT_ERROR_RESPONSE);\r\n        xhr.upload.onabort = () => {\r\n            //console.log(\"Fui_uploadFormData ABORTEEEEDDDD\");\r\n            resolve(ABORTED_ERROR_RESPONSE);\r\n        };\r\n        xhr.onloadend = async (e) => {\r\n            //console.log(\"onloadend loaded\", e.loaded);\r\n            //console.log(\"onloadend total\", e.total);\r\n            //console.log(\"onloadend lengthComputable\", e.lengthComputable);\r\n\r\n        }\r\n        // listen for `progress` event\r\n        //currently listening on FileItem component hook\r\n        xhr.onreadystatechange = async (e) => {\r\n            //console.log(\"Finished\", xhr);\r\n\r\n            //console.log(\"Fui_uploadFormData uploadFile onreadystatechange e.type\", e.type);\r\n            //console.log(\"Fui_uploadFormData uploadFile onreadystatechange\", xhr.readyState, xhr.response);\r\n\r\n            //lastLastState = lastState;\r\n            //lastState = xhr.readyState;\r\n\r\n            if (xhr.readyState === 4) {\r\n                if (xhr.response !== \"\") {\r\n                    //there is th answer\r\n                    resolve(JsonParseResponse(xhr));\r\n                } else {\r\n                    //error unexpected\r\n                    // console.log(\"Fui_uploadFormData EMPTY status\", xhr.status);\r\n                    // console.log(\"Fui_uploadFormData EMPTY readyState\", xhr.readyState);\r\n                    // console.log(\"Fui_uploadFormData EMPTY upload\", xhr.upload);\r\n                    //console.log(\"Fui_uploadFormData EMPTY abort\", xhr.abort);\r\n                    //const jumped = lastLastState - lastLastState !== 1;\r\n                    resolve(ABORTED_ERROR_RESPONSE);\r\n\r\n                }\r\n            } else {\r\n                //console.log(\"Fui_uploadFormData FuiUpload NOT YET\" + xhr.readyState);\r\n            }\r\n        };\r\n        // open request\r\n        xhr.open(finalMethod, endpoint, true);\r\n\r\n        //add header to request\r\n        addHeaders(xhr, headers);\r\n        //start uploading\r\n        xhr.send(data);\r\n    });\r\n\r\n};\r\n\r\n/**\r\n * Method that perfomrs the upload operation for an ExtFIle\r\n * @param file the extended file to be uploaded\r\n * @param url the endpoint\r\n * @param urlFromExtFile a function to generate the url for each ExtFile\r\n * @param method the method for uploading\r\n * @param headers headers for request\r\n * @param asBlob if true, it wil upload file as blob instead of uploadint it as FormData.\r\n * @returns The extFile with upload values modified\r\n */\r\nexport const uploadExtFile = async (\r\n    extFile: ExtFile,\r\n    url?: string,\r\n    urlFromExtFile?: (f: ExtFile) => string,\r\n    method?: Method,\r\n    headers?: Record<string, string>,\r\n    uploadLabel?: string,\r\n    asBlob?: boolean\r\n): Promise<ExtFile> => {\r\n    return new Promise(async (resolve, reject) => {\r\n        try {\r\n            //validate uploader\r\n            const uploader: XMLHttpRequest | undefined = extFile.xhr;\r\n            if (!uploader) {\r\n                resolve(NO_XHR_PROVIDED_ERROR(extFile));\r\n                return;\r\n            }\r\n            //validate url\r\n            const finalUrl: string | undefined = extFile.uploadUrl || urlFromExtFile?.(extFile) || url;\r\n            if (finalUrl ==undefined  || finalUrl.length == 0) {\r\n                resolve(NO_URL_PROVIDED_ERROR(extFile));\r\n                return;\r\n            }\r\n\r\n            const localMethod: Method = method || \"POST\";\r\n            const fileToUpload: File = extFile.file as File;\r\n\r\n            const formData = new FormData();\r\n\r\n            formData.append(uploadLabel || \"file\", fileToUpload);\r\n\r\n            // add extra data to upload\r\n            const finalExtraData: Record<string, any> =\r\n            {\r\n                //    otherValue: \"other valueee haaaa\", param2: { tecnica: \"KIKOHUUUU\", friend: \"Chaos\", age: 25 },\r\n\r\n                ...extFile.extraUploadData\r\n            };\r\n\r\n            addExtraDataUpload(formData, finalExtraData);\r\n            //console.log(\"FORMDATA\", formData);\r\n\r\n            let responseFui: ServerResponse;\r\n            if (asBlob)\r\n                responseFui = await uploadBlob(\r\n                    uploader,\r\n                    localMethod,\r\n                    finalUrl,\r\n                    fileToUpload,\r\n                    headers || {});\r\n            else\r\n                responseFui = await uploadFormData(\r\n                    uploader,\r\n                    localMethod,\r\n                    finalUrl,\r\n                    formData,\r\n                    headers || {});\r\n\r\n            if (responseFui.success) {\r\n                // status is true\r\n                resolve(makeSuccessUploadResponse(extFile, responseFui));\r\n            } else {\r\n                // status is false\r\n                resolve(makeErrorUploadResponse(extFile, responseFui));\r\n            }\r\n        } catch (error) {\r\n            // on error\r\n            //console.log(\"uploadPromiseXHR uploadPromiseXHR ERROR\", error);\r\n            resolve(\r\n                makeErrorUploadResponse(extFile, UNEXPECTED_ERROR_RESPONSE)\r\n            );\r\n        }\r\n    });\r\n};\r\n\r\n\r\n\r\n\r\nexport function uploadFile(\r\n    file: File,\r\n    url: string,\r\n    method?: Method,\r\n    label?: string,\r\n    headers?: Record<string, string>\r\n): Promise<ServerResponse> {\r\n    return new Promise(async (resolve, reject) => {\r\n\r\n\r\n        //start uploading\r\n        const formData = new FormData();\r\n\r\n        formData.append(label || \"file\", file);\r\n\r\n        try {\r\n            const serverResponse: ServerResponse = await uploadFormData(new XMLHttpRequest(), method, url, formData, headers);\r\n            resolve(serverResponse);\r\n        } catch (error) {\r\n            // on error\r\n            //console.log(\"uploadPromiseXHR uploadPromiseXHR ERROR\", error);\r\n            resolve(UNEXPECTED_ERROR_RESPONSE);\r\n        }\r\n    });\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * @deprecated\r\n * Uploads one formData object to a given endpoint in a promisified way\r\n * @param xhr XMLHTTPrequest object\r\n * @param method method for uploading\r\n * @param endpoint endpoint to upload the file\r\n * @param data FromData object to perform multipart form data\r\n * @param headers the set of headers\r\n * @returns a dui server response that consists on {success, payload, message}\r\n */\r\nexport const FuiUpload = (\r\n    xhr: XMLHttpRequest,\r\n    method: Method,\r\n    endpoint: string,\r\n    data: FormData,\r\n    headers: Record<string, string>\r\n) => {\r\n    return new Promise<ServerResponse>((resolve, reject) => {\r\n        //console.log(\"FuiUpload params\", xhr, method, endpoint, data, headers);\r\n\r\n        xhr.upload.onload = () => {\r\n            //console.log(\"FuiUpload onLoad\", xhr.readyState, xhr.response);\r\n        };\r\n\r\n        xhr.upload.ontimeout = () => resolve(TIMEOUT_ERROR_RESPONSE);\r\n        xhr.upload.onabort = () => resolve(ABORTED_ERROR_RESPONSE);\r\n\r\n        // listen for `progress` event\r\n        //currently listening on FileMosaic component hook\r\n\r\n        xhr.onreadystatechange = async (e) => {\r\n            //console.log(\"Finished\", xhr);\r\n            //console.log(\"FuiUpload onreadystatechange\", xhr.readyState, xhr.response, xhr);\r\n\r\n            if (xhr.readyState === 4) {\r\n                if (xhr.response !== \"\") {\r\n                    //there is th answer\r\n                    resolve(JsonParseResponse(xhr));\r\n                } else {\r\n                    //error unexpected\r\n                    resolve(UNEXPECTED_ERROR_RESPONSE);\r\n                }\r\n            } else {\r\n                //console.log(\"FuiUpload NOT YET\" + xhr.readyState);\r\n            }\r\n        };\r\n        // open request\r\n        xhr.open(method, endpoint, true);\r\n        const headerKeys: string[] = Object.keys(headers);\r\n        //const headerValues: string[] = Object.values(headers);\r\n        for (let i = 0; i < headerKeys.length; i++) {\r\n            //console.log(\"FuiUpload  headers\", headerKeys[i], headers[headerKeys[i]]);\r\n            xhr.setRequestHeader(\r\n                headerKeys[i],\r\n                headers[headerKeys[i]]\r\n            );\r\n        }\r\n        //start uploading\r\n        xhr.send(data);\r\n    });\r\n\r\n};","\r\nimport { ExtFile, ExtFileInstance, ServerResponse, UploadResponse, UPLOADSTATUS } from \"../types\"\r\n\r\nexport const unexpectedErrorUploadResult = (extFile: ExtFile): ExtFile => {\r\n    return {\r\n        ...extFile,\r\n        uploadMessage: \"Unexpected error\",\r\n        uploadStatus: \"error\",\r\n        serverResponse: {\r\n            success: false,\r\n            message: \"Error on upload: unexpected error \",\r\n            payload: {},\r\n        }\r\n    }\r\n}\r\nexport const unableToUploadResult = (\r\n    extFile: ExtFile\r\n): UploadResponse => {\r\n    return {\r\n        id: extFile.id,\r\n        uploadedFile: {\r\n            ...extFile,\r\n            uploadMessage: \"Unable to upload. XHR was not provided\",\r\n            uploadStatus: \"error\"\r\n        },\r\n        serverResponse: {\r\n            success: false,\r\n            message: \"Error on upload: Unable to upload. XHR was not provided \",\r\n            payload: {},\r\n        }\r\n    }\r\n}\r\nexport const completeUploadResult = (\r\n    extFile: ExtFile,\r\n    serverResponse: ServerResponse,\r\n    uploadStatusresult: UPLOADSTATUS\r\n): UploadResponse => {\r\n    return {\r\n        id: extFile.id,\r\n        uploadedFile: {\r\n            ...extFile,\r\n            uploadMessage: serverResponse.message,\r\n            uploadStatus: uploadStatusresult\r\n        },\r\n        serverResponse: serverResponse\r\n    }\r\n}\r\n\r\n/**\r\n * Initializes the xhr attribute for performing uploads\r\n * @param extFileList the list of extended files\r\n * @returns the array of extFiles with the xhr attribute initialized\r\n */\r\nexport const toUploadableExtFileList = (\r\n    extFileList: ExtFile[] | ExtFileInstance[]\r\n): ExtFile[] => {\r\n    if (!extFileList) return [];\r\n    return extFileList.map((extFile: ExtFile | ExtFileInstance) => {\r\n        return { ...extFile, xhr: new XMLHttpRequest() }\r\n    });\r\n}\r\n\r\n/**\r\n * Updates the uploadStatus of the given extFile \r\n * from \"preparing\" to \"uploading\"\r\n * @param extFile the extended file\r\n * @returns the extended file with uploadStatus updated to \"uploading\"\r\n */\r\nexport const instantPreparingToUploadOne = (\r\n    extFile: ExtFileInstance | ExtFile\r\n): ExtFileInstance | ExtFile => {\r\n    if (extFile.uploadStatus === \"preparing\") {\r\n        //for ExtFile instance\r\n        extFile.uploadStatus = \"uploading\";\r\n        //for ExtFile type\r\n        return {\r\n            ...extFile,\r\n            uploadStatus: \"uploading\",\r\n        };\r\n    }\r\n    return extFile;\r\n};\r\n\r\n/**\r\n * If current uploadStatus is \"preparing\" it changes it to \"uploading\".\r\n * Otherwise it will return the exact same input.\r\n * @param extFile the extended file\r\n * @returns the extFile with the upload status changed\r\n */\r\nexport const preparingToUploadOne = (\r\n    extFile: ExtFileInstance | ExtFile\r\n): Promise<ExtFileInstance | ExtFile> => {\r\n    return new Promise((resolve, reject) => {\r\n        setTimeout(() => {\r\n            if (extFile.uploadStatus === \"preparing\") {\r\n                //for ExtFile instance\r\n                extFile.uploadStatus = \"uploading\";\r\n                //for ExtFile type\r\n                resolve({\r\n                    ...extFile,\r\n                    uploadStatus: \"uploading\",\r\n                });\r\n            } else\r\n                resolve(extFile);\r\n        }, 1500);\r\n    });\r\n};\r\n/**\r\n * Sleeps for 1200 miliseconds for showing a better transition\r\n * on uploading\r\n * @param time the time to sleep in miliseconds\r\n * @returns true is everything is ok\r\n */\r\nexport const sleepTransition = (time = 1500\r\n): Promise<boolean> => {\r\n    return new Promise((resolve, reject) => {\r\n        setTimeout(() => {\r\n            resolve(true);\r\n        }, time);\r\n    });\r\n}\r\n/**\r\n * Removes the deleted files and updates the aborted ones with a message\r\n * @param arrExtFile incomming arr of extFle instances\r\n * @returns an array of ExtFle objects\r\n */\r\nexport const sanitizeArrExtFile = (arrExtFile: ExtFileInstance[]): ExtFile[] => {\r\n  \r\n    return arrExtFile.filter((extFileInstance: ExtFileInstance) =>\r\n        !extFileInstance.extraData?.deleted)\r\n\r\n        .map((extFileInstance: ExtFileInstance) => {\r\n            if (extFileInstance.uploadStatus === \"aborted\"\r\n                && !extFileInstance.uploadMessage) {\r\n                    // TO-DO: ad localization for this message\r\n                extFileInstance.uploadMessage = \"Upload aborted by user\";\r\n                //extFileInstance.uploadStatus = \"error\";\r\n            }\r\n            return ExtFileInstance.toExtFile(extFileInstance) as ExtFile\r\n        });\r\n}\r\n/**\r\n * \r\n * @param extFileInstance \r\n * @param extFileobj \r\n */\r\nexport const setNextUploadStatus = (\r\n    extFileInstance: ExtFileInstance,\r\n    extFileobj: ExtFile) => {\r\n\r\n    const prevStatus: UPLOADSTATUS | undefined = extFileInstance.uploadStatus;\r\n    const nextStstaus: UPLOADSTATUS | undefined = extFileobj.uploadStatus;\r\n\r\n    //console.log(\"setNextUploadStatus\", prevStatus, nextStstaus);\r\n    //console.log(\"setNextUploadStatus\", extFileInstance.uploadMessage, extFileobj.uploadMessage);\r\n    if (\r\n        prevStatus === \"preparing\" &&\r\n        [\"aborted\", undefined].includes(nextStstaus)\r\n    ) {\r\n        extFileInstance.uploadStatus = undefined;\r\n        extFileInstance.uploadMessage = extFileobj.uploadMessage;\r\n\r\n    } else if (\r\n        prevStatus === \"uploading\" &&\r\n        [\"aborted\", undefined].includes(nextStstaus)\r\n    ) {\r\n        extFileInstance.uploadStatus = \"aborted\";\r\n        extFileInstance.uploadMessage = extFileobj.uploadMessage;\r\n\r\n    }\r\n\r\n}\r\n\r\n","import { NamedColor } from \"../types/NamedColor\";\r\n\r\n/**\r\n * The full list of named Colors provided by\r\n * https://htmlcolorcodes.com/es/nombres-de-los-colores/\r\n */\r\nexport const NAMED_COLORS: NamedColor =\r\n{\r\n    //RED\r\n    indianred: \"#CD5C5C\",\r\n    lightcoral: \"#F08080\",\r\n    salmon: \"#FA8072\",\r\n    darksalmon: \"#E9967A\",\r\n    lightsalmon: \"#FFA07A\",\r\n    crimson: \"#DC143C\",\r\n    red: \"#FF0000\",\r\n    firebrick: \"#B22222\",\r\n    darkred: \"#8B0000\",\r\n    //PINK\r\n    pink: \"#FFC0CB\",\r\n    lightpink: \"#FFB6C1\",\r\n    hotpink: \"#FF69B4\",\r\n    deeppink: \"#FF1493\",\r\n    mediumvioletred: \"#C71585\",\r\n    palevioletred: \"#DB7093\",\r\n    //ORANGE\r\n    //\"lightsalmon: \"#FFA07A\",\r\n    coral: \"#FF7F50\",\r\n    tomato: \"#FF6347\",\r\n    orangered: \"#FF4500\",\r\n    darkorange: \"#FF8C00\",\r\n    orange: \"#FFA500\",\r\n    //YELLOW\r\n    gold: \"#FFD700\",\r\n    yellow: \"#FFFF00\",\r\n    lightyellow: \"#FFFFE0\",\r\n    lemonchiffon: \"#FFFACD\",\r\n    lightgoldenrodyellow: \"#FAFAD2\",\r\n    papayawhip: \"#FFEFD5\",\r\n    moccasin: \"#FFE4B5\",\r\n    peachpuff: \"#FFDAB9\",\r\n    palegoldenrod: \"#EEE8AA\",\r\n    khaki: \"#F0E68C\",\r\n    darkkhaki: \"#BDB76B\",\r\n    //PURPLE\r\n    lavender: \"#E6E6FA\",\r\n    thistle: \"#D8BFD8\",\r\n    plum: \"#DDA0DD\",\r\n    violet: \"#EE82EE\",\r\n    orchid: \"#DA70D6\",\r\n    fuchsia: \"#FF00FF\",\r\n    magenta: \"#FF00FF\",\r\n    mediumorchid: \"#BA55D3\",\r\n    mediumpurple: \"#9370DB\",\r\n    rebeccapurple: \"#663399\",\r\n    blueviolet: \"#8A2BE2\",\r\n    darkviolet: \"#9400D3\",\r\n    darkorchid: \"#9932CC\",\r\n    darkmagenta: \"#8B008B\",\r\n    purple: \"#800080\",\r\n    indigo: \"#4B0082\",\r\n    slateblue: \"#6A5ACD\",\r\n    darkslateblue: \"#483D8B\",\r\n    mediumslateblue: \"#7B68EE\",\r\n    //GREEN\r\n    greenyellow: \"#ADFF2F\",\r\n    chartreuse: \"#7FFF00\",\r\n    lawngreen: \"#7CFC00\",\r\n    lime: \"#00FF00\",\r\n    limegreen: \"#32CD32\",\r\n    palegreen: \"#98FB98\",\r\n    lightgreen: \"#90EE90\",\r\n    mediumspringgreen: \"#00FA9A\",\r\n    springgreen: \"#00FF7F\",\r\n    mediumseagreen: \"#3CB371\",\r\n    seagreen: \"#2E8B57\",\r\n    forestgreen: \"#228B22\",\r\n    green: \"#008000\",\r\n    darkgreen: \"#006400\",\r\n    yellowgreen: \"#9ACD32\",\r\n    olivedrab: \"#6B8E23\",\r\n    olive: \"#808000\",\r\n    darkolivegreen: \"#556B2F\",\r\n    mediumaquamarine: \"#66CDAA\",\r\n    darkseagreen: \"#8FBC8B\",\r\n    lightseagreen: \"#20B2AA\",\r\n    darkcyan: \"#008B8B\",\r\n    teal: \"#008080\",\r\n    //BLUE\r\n    aqua: \"#00FFFF\",\r\n    cyan: \"#00FFFF\",\r\n    lightcyan: \"#E0FFFF\",\r\n    paleturquoise: \"#AFEEEE\",\r\n    aquamarine: \"#7FFFD4\",\r\n    turquoise: \"#40E0D0\",\r\n    mediumturquoise: \"#48D1CC\",\r\n    darkturquoise: \"#00CED1\",\r\n    cadetblue: \"#5F9EA0\",\r\n    steelblue: \"#4682B4\",\r\n    lightsteelblue: \"#B0C4DE\",\r\n    powderblue: \"#B0E0E6\",\r\n    lightblue: \"#ADD8E6\",\r\n    skyblue: \"#87CEEB\",\r\n    lightskyblue: \"#87CEFA\",\r\n    deepskyblue: \"#00BFFF\",\r\n    dodgerblue: \"#1E90FF\",\r\n    cornflowerblue: \"#6495ED\",\r\n    //\"mediumslateblue: \"#7B68EE\",\r\n    royalblue: \"#4169E1\",\r\n    blue: \"#0000FF\",\r\n    mediumblue: \"#0000CD\",\r\n    darkblue: \"#00008B\",\r\n    navy: \"#000080\",\r\n    midnightblue: \"#191970\",\r\n    //BROWN\r\n    cornsilk: \"#FFF8DC\",\r\n    blanchedalmond: \"#FFEBCD\",\r\n    bisque: \"#FFE4C4\",\r\n    navajowhite: \"#FFDEAD\",\r\n    wheat: \"#F5DEB3\",\r\n    burlywood: \"#DEB887\",\r\n    tan: \"#D2B48C\",\r\n    rosybrown: \"#BC8F8F\",\r\n    sandybrown: \"#F4A460\",\r\n    goldenrod: \"#DAA520\",\r\n    darkgoldenrod: \"#B8860B\",\r\n    peru: \"#CD853F\",\r\n    chocolate: \"#D2691E\",\r\n    saddlebrown: \"#8B4513\",\r\n    sienna: \"#A0522D\",\r\n    brown: \"#A52A2A\",\r\n    maroon: \"#800000\",\r\n    //WHITE\r\n    white: \"#FFFFFF\",\r\n    snow: \"#FFFAFA\",\r\n    honeydew: \"#F0FFF0\",\r\n    mintcream: \"#F5FFFA\",\r\n    azure: \"#F0FFFF\",\r\n    aliceblue: \"#F0F8FF\",\r\n    ghostwhite: \"#F8F8FF\",\r\n    whitesmoke: \"#F5F5F5\",\r\n    seashell: \"#FFF5EE\",\r\n    beige: \"#F5F5DC\",\r\n    oldlace: \"#FDF5E6\",\r\n    floralwhite: \"#FFFAF0\",\r\n    ivory: \"#FFFFF0\",\r\n    antiquewhite: \"#FAEBD7\",\r\n    linen: \"#FAF0E6\",\r\n    lavenderblush: \"#FFF0F5\",\r\n    mistyrose: \"#FFE4E1\",\r\n    //GREY\r\n    gainsboro: \"#DCDCDC\",\r\n    lightgray: \"#D3D3D3\",\r\n    silver: \"#C0C0C0\",\r\n    darkgray: \"#A9A9A9\",\r\n    gray: \"#808080\",\r\n    dimgray: \"#696969\",\r\n    lightslategray: \"#778899\",\r\n    slategray: \"#708090\",\r\n    darkslategray: \"#2F4F4F\",\r\n    black: \"#000000\"\r\n}","import { NAMED_COLORS } from \"./namedColors\";\r\n\r\n/**\r\n * Make the color into a darker color\r\n * @param colorInput \r\n * @returns the darked color in\r\n */\r\nexport const darkerColor = (colorInput: string, percentage = 25): string => {\r\n    let darkedColor = \"\";\r\n    const reduce = (100 - percentage) / 100;\r\n    let component1: number = 0;\r\n    let component2: number = 0;\r\n    let component3: number = 0;\r\n    if (isHexColor(colourNameToHex(colorInput))) {\r\n\r\n        component1 = hexTodec(colorInput.charAt(1)) * 16 + hexTodec(colorInput.charAt(2));\r\n        component2 = hexTodec(colorInput.charAt(3)) * 16 + hexTodec(colorInput.charAt(4));\r\n        component3 = hexTodec(colorInput.charAt(5)) * 16 + hexTodec(colorInput.charAt(6));\r\n\r\n        darkedColor = `rgb(${component1 * reduce}, ${component2 * reduce},${component3 * reduce})`;\r\n    } else {\r\n        if (colorInput.includes(\"rgba\")) {\r\n            let slicer = colorInput.replace(\"rgba(\", \"\");\r\n            let components: string[] = slicer.split(\",\");\r\n            darkedColor = `rgb(${parseInt(components[0], 10) * reduce}, ${parseInt(components[1], 10) * reduce},${parseInt(components[2], 10) * reduce})`;\r\n            //return darkedColor;\r\n        } else if (colorInput.includes(\"rgb\")) {\r\n\r\n            let slicer = colorInput.replace(\"rgb(\", \"\");\r\n            let components: string[] = slicer.split(\",\");\r\n            darkedColor = `rgb(${parseInt(components[0], 10) * reduce}, ${parseInt(components[1], 10) * reduce},${parseInt(components[2], 10) * reduce})`;\r\n            // return darkedColor;\r\n        }\r\n    }\r\n\r\n    return darkedColor;\r\n}\r\n/**\r\n * Make the color into a brighted color\r\n * @param colorInput \r\n * @returns the brighted color \r\n */\r\nexport const brighterColor = (colorInput: string, percentage = 25): string => {\r\n    let brightedColor = \"\";\r\n    const increase = (100 + percentage) / 100;\r\n    let component1: number = 0;\r\n    let component2: number = 0;\r\n    let component3: number = 0;\r\n    if (isHexColor(colourNameToHex(colorInput))) {\r\n\r\n        component1 = hexTodec(colorInput.charAt(1)) * 16 + hexTodec(colorInput.charAt(2));\r\n        component2 = hexTodec(colorInput.charAt(3)) * 16 + hexTodec(colorInput.charAt(4));\r\n        component3 = hexTodec(colorInput.charAt(5)) * 16 + hexTodec(colorInput.charAt(6));\r\n\r\n        brightedColor = `rgb(${component1 * increase}, ${component2 * increase},${component3 * increase})`;\r\n    } else {\r\n        if (colorInput.includes(\"rgba\")) {\r\n            let slicer = colorInput.replace(\"rgba(\", \"\");\r\n            let components: string[] = slicer.split(\",\");\r\n            brightedColor = `rgb(${parseInt(components[0], 10) * increase}, ${parseInt(components[1], 10) * increase},${parseInt(components[2], 10) * increase})`;\r\n            //return darkedColor;\r\n        } else if (colorInput.includes(\"rgb\")) {\r\n\r\n            let slicer = colorInput.replace(\"rgb(\", \"\");\r\n            let components: string[] = slicer.split(\",\");\r\n            brightedColor = `rgb(${parseInt(components[0], 10) * increase}, ${parseInt(components[1], 10) * increase},${parseInt(components[2], 10) * increase})`;\r\n            // return darkedColor;\r\n        }\r\n    }\r\n\r\n    return brightedColor;\r\n}\r\n\r\n/**\r\n * In order to managae rgba() we convert hex colors into rgba()\r\n * If the given color is already a rgb() color, it can add the percentage to convert it into rgba()\r\n * \r\n * \r\n * @param colorInput color in hex or in rgb\r\n * @param perc percentage for RGBA() color \r\n * @returns the rgba representation of a hex color\r\n */\r\nexport const hexColorToRGB = (colorInput: string | undefined, perc = 0, defaultColor?: string): string => {\r\n    let resultDefault: string = defaultColor ? defaultColor : \"rgba(255, 255, 255, 0.6)\";\r\n    if (!colorInput) {\r\n        return resultDefault;\r\n    }\r\n    //work only in uppercase\r\n    const color: string = colorInput.toUpperCase();\r\n    // is already a rgba color\r\n    if (color.includes(\"RGBA\")) {\r\n        return color;\r\n    }\r\n\r\n    //return rbg => rgba\r\n    if (color.includes(\"RGB\")) {\r\n        return color.replace('RGB', `rgba`).replace(')', `, ${perc})`);\r\n    }\r\n\r\n    // if is a hex color or named color\r\n    if (!isHexColor(colourNameToHex(color))) {\r\n        return resultDefault;\r\n    }\r\n    let resultOk: string = \"\";\r\n    //let strVar: string = \"\";\r\n    let component1: number = 0;\r\n    let component2: number = 0;\r\n    let component3: number = 0;\r\n    //If passed all validations, proceed to transform\r\n    component1 = hexTodec(color.charAt(1)) * 16 + hexTodec(color.charAt(2));\r\n    component2 = hexTodec(color.charAt(3)) * 16 + hexTodec(color.charAt(4));\r\n    component3 = hexTodec(color.charAt(5)) * 16 + hexTodec(color.charAt(6));\r\n    resultOk = `rgba(${component1}, ${component2},${component3} , ${perc})`;\r\n    return resultOk;\r\n}\r\n\r\n/**\r\n * Validates wheteher the color is hexadecimal css color\r\n * Example:  #FF56AC\r\n * \r\n * \r\n * @param colorInput the color inpt to test \r\n * @returns true if the inputColor is a hexadecimal css color\r\n */\r\nexport const isHexColor = (colorInput: string): boolean => {\r\n\r\n    // if first element is no '#' return default background color\r\n    if (colorInput.charAt(0) !== '#') {\r\n\r\n        return false;\r\n    }\r\n    // if color lenght is not exactly 7 return default\r\n    if (colorInput.length !== 7) {\r\n\r\n\r\n        return false;\r\n    }\r\n    // if one of the letters is not included in hex array return  default\r\n    for (let i = 1; i < colorInput.length; i++) {\r\n        if (!hexArray.includes(colorInput.charAt(i))) {\r\n\r\n\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\n/**\r\n * Converts a named color into hexadecimal color\r\n * from a list of well known namd colors if found.\r\n * When not given returns a \"\"\r\n * When not found in the list, returns the same value given\r\n * @param colour the named color\r\n * @returns The hex representation of the color or \"\" or the same color\r\n */\r\nexport function colourNameToHex(colour: string | undefined): string {\r\n    /**\r\n     * When not given\r\n     */\r\n    if (!colour) {\r\n        return \"\";\r\n    }\r\n    /**\r\n     * when named color is found\r\n     */\r\n    if (NAMED_COLORS[colour.toLocaleLowerCase()] !== undefined) {\r\n        return NAMED_COLORS[colour.toLocaleLowerCase()];\r\n    }\r\n    /**\r\n     * When the named color was not found\r\n     */\r\n\r\n    return colour;\r\n}\r\n\r\n/**\r\n * hexArray & decArray\r\n * \r\n * arrays of numbers used to convert hexadecimal numbers into decimal and viceversa\r\n */\r\nconst hexArray = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F'];\r\nconst decArray = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15];\r\n\r\n/**\r\n * Converts hex number in string representation to decimal number\r\n * \r\n * \r\n * @param letter the string hex number\r\n * @returns a decimal number\r\n */\r\nexport const hexTodec = (letter: string): number => {\r\n    if (hexArray.includes(letter)) {\r\n        return decArray[hexArray.indexOf(letter)];\r\n    } else {\r\n        return 0;\r\n    }\r\n}\r\n\r\n\r\n/** \r\n * Asure a base color. When not given or when given an incorrect color format\r\n * default color is this kind of grey #5d6475\r\n * \r\n * @param color param color given by user\r\n * @returns returns the same color \r\n */\r\nexport const asureColor = (color?: string): string => {\r\n    if (color !== undefined && color !== \"\") {\r\n        return color;\r\n    } else {\r\n        return DEFAULT_FONT_COLOR;\r\n    }\r\n}\r\n/** \r\n * Asure a base color. When not given or when given an incorrect color format\r\n * default color is this kind of grey #5d6475\r\n * \r\n * @param color param color given by user\r\n * @returns returns the same color \r\n */\r\nexport const completeAsureColor = (color?: string, perc = 1): string => {\r\n\r\n    return hexColorToRGB(asureColor(colourNameToHex(color)), perc);\r\n\r\n}\r\n\r\n\r\n\r\nexport const DEFAULT_FONT_COLOR = \"#646c7f\";","import { ExtFile, ExtFileInstance, ExtFileManager } from \"../types\";\r\n\r\nexport const extFileReconcilation = (\r\n    dropzoneId: number | string | undefined,\r\n    extFileIncomming: ExtFile[]\r\n): ExtFile[] | undefined => {\r\n    let result: ExtFile[] = [];\r\n\r\n    let arrOfExtFiles: ExtFileInstance[] | undefined =\r\n        ExtFileManager.getExtFileInstanceList(dropzoneId);\r\n\r\n    // continue only if arrOfExtFiles exists\r\n    if (arrOfExtFiles) {\r\n        //different sizes means there was deleted files\r\n        //also can be new files to be uploaded\r\n        //needed an extra flag to allow add files in the middle of uploading process\r\n        // if new files are added, they are added to the Manager\r\n        // outside they were already added to the UI\r\n        // inside Dropzone, will be needed a .next() method for manager\r\n\r\n        // 1st allow deleted files and ignore new ones\r\n        // reduce the arrOfExtFileInstances array\r\n        // parecido a listas ligadas, iterar hasta encontrar null XD\r\n        let incommingTemp: ExtFile[] = [...extFileIncomming];\r\n        incommingTemp = incommingTemp.filter(\r\n            (F) => arrOfExtFiles?.findIndex(I => I.id === F.id) === -1\r\n        );\r\n\r\n        //console.log(\"reconciliation incommingTemp\", incommingTemp);\r\n        \r\n\r\n        //different sizes not allowed\r\n        if (arrOfExtFiles.length !== extFileIncomming.length || extFileIncomming.length === 0) {\r\n            return undefined;\r\n        }\r\n        for (let i = 0; i < arrOfExtFiles.length; i++) {\r\n            if (\r\n                (extFileIncomming[i].uploadStatus === undefined)\r\n                &&\r\n                (arrOfExtFiles[i].uploadStatus === \"preparing\")\r\n            ) {\r\n                //console.log(\"useDropzoneFileListUpdater onCancel i\", i);\r\n                arrOfExtFiles[i].uploadStatus = undefined;\r\n            }\r\n        }\r\n    }\r\n\r\n    return result;\r\n}"],"names":["addExtraDataUpload"],"mappings":"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"}